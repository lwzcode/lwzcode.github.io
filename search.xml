<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>手写Vue3响应式</title>
      <link href="/2023/12/06/%E6%89%8B%E5%86%99Vue3%E5%93%8D%E5%BA%94%E5%BC%8F/"/>
      <url>/2023/12/06/%E6%89%8B%E5%86%99Vue3%E5%93%8D%E5%BA%94%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> observeWeakMap = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"><span class="keyword">let</span> activeEffect = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// 添加执行副作用函数并收集依赖</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">effect</span> = (<span class="params">eff</span>) =&gt; &#123;</span><br><span class="line">  activeEffect = eff;</span><br><span class="line">  <span class="title function_">activeEffect</span>();</span><br><span class="line">  activeEffect = <span class="literal">null</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// activeEffect执行时如果有触发get，则执行track</span></span><br><span class="line"><span class="comment">// 将响应式对象的副作用函数收集到一个weakMap</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">track</span> = (<span class="params">target, key</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (activeEffect) &#123;</span><br><span class="line">    <span class="comment">// 得到target对象对应的Map:(key：new Set())</span></span><br><span class="line">    <span class="comment">// key 为属性</span></span><br><span class="line">    <span class="comment">// set 里保存的是多个副作用函数</span></span><br><span class="line">    <span class="keyword">let</span> depsMap = observeWeakMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (!depsMap) &#123;</span><br><span class="line">      depsMap = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">      observeWeakMap.<span class="title function_">set</span>(target, depsMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> depsSet = depsMap.<span class="title function_">get</span>(key);</span><br><span class="line">    <span class="keyword">if</span> (!depsSet) &#123;</span><br><span class="line">      depsSet = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">      depsMap.<span class="title function_">set</span>(key, depsSet);</span><br><span class="line">    &#125;</span><br><span class="line">    depsSet.<span class="title function_">add</span>(activeEffect);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 在set时调用trigger</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">trigger</span> = (<span class="params">target, key</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> depsMap = observeWeakMap.<span class="title function_">get</span>(target);</span><br><span class="line">  <span class="keyword">if</span> (!depsMap) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> depsSet = depsMap.<span class="title function_">get</span>(key);</span><br><span class="line">  <span class="keyword">if</span> (!depsSet) <span class="keyword">return</span>;</span><br><span class="line">  depsSet.<span class="title function_">forEach</span>(<span class="function">(<span class="params">eff</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">eff</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">reactive</span> = (<span class="params">target</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> handler = &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target, key, receiver</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, key, receiver);</span><br><span class="line">      <span class="title function_">track</span>(target, key);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target, key, value, receiver</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> oldValue = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, key, receiver);</span><br><span class="line">      <span class="keyword">const</span> result = <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, key, value, receiver);</span><br><span class="line">      <span class="keyword">if</span> (oldValue !== value) &#123;</span><br><span class="line">        <span class="title function_">trigger</span>(target, key);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Proxy</span>(target, handler);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">ref</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> target = &#123; <span class="attr">_value</span>: value &#125;;</span><br><span class="line">  <span class="keyword">const</span> key = <span class="string">&quot;value&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> _key = <span class="string">&quot;_value&quot;</span>;</span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(target, key, &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, _key);</span><br><span class="line">      <span class="title function_">track</span>(target, key);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> oldValue = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, _key);</span><br><span class="line">      <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, _key, value);</span><br><span class="line">      <span class="keyword">if</span> (oldValue !== value) &#123;</span><br><span class="line">        <span class="title function_">trigger</span>(target, key);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> target;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">computed</span> = (<span class="params">getter</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> r = &#123;</span><br><span class="line">    <span class="attr">_dirty</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">_init</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">value</span>() &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">_dirty</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">_init</span>) &#123;</span><br><span class="line">          activeEffect = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">_dirty</span>) <span class="variable language_">this</span>.<span class="property">_dirty</span> = <span class="literal">true</span>;</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_value</span> = <span class="title function_">getter</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">_init</span>) &#123;</span><br><span class="line">          activeEffect = <span class="literal">null</span>;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">_init</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_dirty</span> = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_value</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> r;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写promise</title>
      <link href="/2023/12/06/%E6%89%8B%E5%86%99promise/"/>
      <url>/2023/12/06/%E6%89%8B%E5%86%99promise/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">MyPromise</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> state = <span class="string">&quot;pending&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> value = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">const</span> callbacks = [];</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">then</span> = <span class="keyword">function</span> (<span class="params">onFulfilled</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyPromise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">handle</span>(&#123;</span><br><span class="line">        <span class="comment">//桥梁，将新 Promise 的 resolve 方法，放到前一个 promise 的回调对象中</span></span><br><span class="line">        onFulfilled,</span><br><span class="line">        resolve,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">handle</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&quot;pending&quot;</span>) &#123;</span><br><span class="line">      callbacks.<span class="title function_">push</span>(callback);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state === <span class="string">&quot;fulfilled&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!callback.<span class="property">onFulfilled</span>) &#123;</span><br><span class="line">        callback.<span class="title function_">resolve</span>(value);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> ret = callback.<span class="title function_">onFulfilled</span>(value); <span class="comment">//处理回调</span></span><br><span class="line">      callback.<span class="title function_">resolve</span>(ret); <span class="comment">//处理下一个 promise 的resolve</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">newValue</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (state !== <span class="string">&quot;pending&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">      state = <span class="string">&quot;fulfilled&quot;</span>;</span><br><span class="line">      value = newValue;</span><br><span class="line">      <span class="title function_">handelCb</span>();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">queueMicrotask</span>(fn); <span class="comment">//基于 PromiseA+ 规范</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">handelCb</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (callbacks.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> fulfiledFn = callbacks.<span class="title function_">shift</span>();</span><br><span class="line">      <span class="title function_">handle</span>(fulfiledFn);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">fn</span>(resolve);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">MyPromise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">debugger</span>;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="number">20</span>);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECMAScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript-encoding</title>
      <link href="/2023/04/26/javascript-encoding/"/>
      <url>/2023/04/26/javascript-encoding/</url>
      
        <content type="html"><![CDATA[<p>Does JavaScript use UCS-2 or UTF-16 encoding? Since I couldn’t find a definitive answer to this question anywhere, I decided to look into it. The answer depends on what you’re referring to: the JavaScript engine, or JavaScript at the language level.</p><p>Let’s start with the basics…</p><h1 id="The-notorious-BMP"><a href="#The-notorious-BMP" class="headerlink" title="The notorious BMP"></a>The notorious BMP</h1><p>Unicode identifies characters by an unambiguous name and an integer number called its code point. For example, the © character is named “copyright sign” and has U+00A9 — 0xA9 can be written as 169 in decimal — as its code point.</p><p>The Unicode code space is divided into seventeen planes of 2^16 (65,536) code points each. Some of these code points have not yet been assigned character values, some are reserved for private use, and some are permanently reserved as non-characters. The code points in each plane have the hexadecimal values xy0000 to xyFFFF, where xy is a hex value from 00 to 10, signifying which plane the values belong to.</p><p>The first plane (xy is 00) is called the Basic Multilingual Plane or BMP. It contains the code points from U+0000 to U+FFFF, which are the most frequently used characters.</p><p>The other sixteen planes (U+010000 → U+10FFFF) are called supplementary planes or astral planes. I won’t discuss them here; just remember that there are BMP characters and non-BMP characters, the latter of which are also known as supplementary characters or astral characters.</p><h1 id="Differences-between-UCS-2-and-UTF-16"><a href="#Differences-between-UCS-2-and-UTF-16" class="headerlink" title="Differences between UCS-2 and UTF-16"></a>Differences between UCS-2 and UTF-16</h1><p>Both UCS-2 and UTF-16 are character encodings for Unicode.</p><p>UCS-2 (2-byte Universal Character Set) produces a fixed-length format by simply using the code point as the 16-bit code unit. This produces exactly the same result as UTF-16 for the majority of all code points in the range from 0 to 0xFFFF (i.e. the BMP).</p><p>UTF-16 (16-bit Unicode Transformation Format) is an extension of UCS-2 that allows representing code points outside the BMP. It produces a variable-length result of either one or two 16-bit code units per code point. This way, it can encode code points in the range from 0 to 0x10FFFF.</p><p>For example, in both UCS-2 and UTF-16, the BMP character U+00A9 copyright sign (©) is encoded as 0x00A9.</p><h1 id="Surrogate-pairs"><a href="#Surrogate-pairs" class="headerlink" title="Surrogate pairs"></a>Surrogate pairs</h1><p>Characters outside the BMP, e.g. U+1D306 tetragram for centre (𝌆), can only be encoded in UTF-16 using two 16-bit code units: 0xD834 0xDF06. This is called a surrogate pair. Note that a surrogate pair only represents a single character.</p><p>The first code unit of a surrogate pair is always in the range from 0xD800 to 0xDBFF, and is called a high surrogate or a lead surrogate.</p><p>The second code unit of a surrogate pair is always in the range from 0xDC00 to 0xDFFF, and is called a low surrogate or a trail surrogate.</p><p>UCS-2 lacks the concept of surrogate pairs, and therefore interprets 0xD834 0xDF06 (the previous UTF-16 encoding) as two separate characters.</p><p>Converting between code points and surrogate pairs<br>Section 3.7 of The Unicode Standard 3.0 defines the algorithms for converting to and from surrogate pairs.</p><p>A code point C greater than 0xFFFF corresponds to a surrogate pair <code>&lt;H, L&gt;</code> as per the following formula:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">H = <span class="title class_">Math</span>.<span class="title function_">floor</span>((C - <span class="number">0x10000</span>) / <span class="number">0x400</span>) + <span class="number">0xD800</span></span><br><span class="line">L = (C - <span class="number">0x10000</span>) % <span class="number">0x400</span> + <span class="number">0xDC00</span></span><br></pre></td></tr></table></figure><p>The reverse mapping, i.e. from a surrogate pair <code>&lt;H, L&gt;</code> to a Unicode code point C, is given by:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C = (H - <span class="number">0xD800</span>) * <span class="number">0x400</span> + L - <span class="number">0xDC00</span> + <span class="number">0x10000</span></span><br></pre></td></tr></table></figure><p>Ok, so what about JavaScript?<br>ECMAScript, the standardized version of JavaScript, defines how characters should be interpreted:</p><p>A conforming implementation of this International standard shall interpret characters in conformance with the Unicode Standard, Version 3.0 or later and ISO/IEC 10646-1 with either UCS-2 or UTF-16 as the adopted encoding form, implementation level 3. If the adopted ISO/IEC 10646-1 subset is not otherwise specified, it is presumed to be the BMP subset, collection 300. If the adopted encoding form is not otherwise specified, it is presumed to be the UTF-16 encoding form.</p><p>In other words, JavaScript engines are allowed to use either UCS-2 or UTF-16.</p><p>However, specific parts of the specification require some UTF-16 knowledge, regardless of the engine’s internal encoding.</p><p>Of course, internal engine specifics don’t really matter to the average JavaScript developer. What’s far more interesting is what JavaScript considers to be “characters”, and how it exposes those:</p><p>Throughout the rest of this document, the phrase code unit and the word character will be used to refer to a 16-bit unsigned value used to represent a single 16-bit unit of text.<br>The phrase Unicode character will be used to refer to the abstract linguistic or typographical unit represented by a single Unicode scalar value (which may be longer than 16 bits and thus may be represented by more than one code unit).<br>The phrase code point refers to such a Unicode scalar value.<br>Unicode character only refers to entities represented by single Unicode scalar values: the components of a combining character sequence are still individual “Unicode characters”, even though a user might think of the whole sequence as a single character.</p><p>JavaScript treats code units as individual characters, while humans generally think in terms of Unicode characters. This has some unfortunate consequences for Unicode characters outside the BMP. Since surrogate pairs consist of two code units, ‘𝌆’.length == 2, even though there’s only one Unicode character there. The individual surrogate halves are being exposed as if they were characters: <code>&#39;𝌆&#39; == &#39;\uD834\uDF06&#39;</code>.</p><p>Remind you of something? It should, ’cause this is almost exactly how UCS-2 works. (The only difference is that technically, UCS-2 doesn’t allow surrogate characters, while JavaScript strings do.)</p><p>You could argue that it resembles UTF-16, except unmatched surrogate halves are allowed, surrogates in the wrong order are allowed, and surrogate halves are exposed as separate characters. I think you’ll agree that it’s easier to think of this behavior as “UCS-2 with surrogates”.</p><p>This UCS-2-like behavior affects the entire language — for example, regular expressions for ranges of supplementary characters are much harder to write than in languages that do support UTF-16.</p><p>Surrogate pairs are only recombined into a single Unicode character when they’re displayed by the browser (during layout). This happens outside of the JavaScript engine. To demonstrate this, you could write out the high surrogate and the low surrogate in separate document.write() calls: document.write(‘\uD834’); document.write(‘\uDF06’);. This ends up getting rendered as 𝌆 — one glyph.</p><p>Conclusion<br>JavaScript engines are free to use UCS-2 or UTF-16 internally. Most engines that I know of use UTF-16, but whatever choice they made, it’s just an implementation detail that won’t affect the language’s characteristics.</p><p>The ECMAScript/JavaScript language itself, however, exposes characters according to UCS-2, not UTF-16.</p><p>If you ever need to <a href="https://mathiasbynens.be/notes/javascript-escapes">escape a Unicode character</a>, breaking it up into surrogate halves when necessary, feel free to use my <a href="https://mothereff.in/js-escapes#1%F0%9D%8C%86">JavaScript escaper</a> tool.</p><p>If you want to <a href="https://mothereff.in/byte-counter#%F0%9D%8C%86">count the number of Unicode characters</a> in a JavaScript string, or create a string based on a non-BMP Unicode code point, you could use <a href="https://mths.be/punycode">Punycode.js</a>’s utility functions to convert between UCS-2 strings and UTF-16 code points:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// `String.length` replacement that only counts full Unicode characters</span></span><br><span class="line">punycode.<span class="property">ucs2</span>.<span class="title function_">decode</span>(<span class="string">&#x27;𝌆&#x27;</span>).<span class="property">length</span>; <span class="comment">// 1</span></span><br><span class="line"><span class="comment">// `String.fromCharCode` replacement that doesn’t make you enter the surrogate halves separately</span></span><br><span class="line">punycode.<span class="property">ucs2</span>.<span class="title function_">encode</span>([<span class="number">0x1D306</span>]); <span class="comment">// &#x27;𝌆&#x27;</span></span><br><span class="line">punycode.<span class="property">ucs2</span>.<span class="title function_">encode</span>([<span class="number">119558</span>]); <span class="comment">// &#x27;𝌆&#x27;</span></span><br></pre></td></tr></table></figure><p>ECMAScript 6 will support a new kind of escape sequence in strings, namely <a href="https://mathiasbynens.be/notes/javascript-escapes#unicode-code-point">Unicode code point escapes</a> e.g. <code>\u&#123;1D306&#125;</code>. Additionally, it will define String.fromCodePoint and String#codePointAt, both of which accept code points rather than code units.</p><p>Thanks to Jonas ‘nlogax’ Westerlund, Andrew ‘bobince’ Clover, and Tab Atkins Jr. for inspiring me to look into this, and for helping me out with their explanations.</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue乾坤微应用的使用和部署</title>
      <link href="/2023/04/01/Vue%E4%B9%BE%E5%9D%A4%E5%BE%AE%E5%BA%94%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/04/01/Vue%E4%B9%BE%E5%9D%A4%E5%BE%AE%E5%BA%94%E7%94%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-主应用"><a href="#Vue-主应用" class="headerlink" title="Vue 主应用"></a>Vue 主应用</h1><h2 id="注册微应用"><a href="#注册微应用" class="headerlink" title="注册微应用"></a>注册微应用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  start,</span><br><span class="line">  addGlobalUncaughtErrorHandler,</span><br><span class="line">  registerMicroApps,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;qiankun&quot;</span>;</span><br><span class="line"><span class="comment">//注册微应用</span></span><br><span class="line"><span class="keyword">const</span> apps = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;micro-app1&quot;</span>,</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&quot;/micro-app1/&quot;</span>, <span class="comment">//入口 两端必须有&#x27;/&#x27;</span></span><br><span class="line">    <span class="attr">container</span>: <span class="string">&quot;sub-app-container&quot;</span>, <span class="comment">// 微应用挂载的DOM</span></span><br><span class="line">    <span class="attr">activeRule</span>: <span class="string">&quot;/app1&quot;</span>, <span class="comment">//</span></span><br><span class="line">    <span class="attr">props</span>: &#123;</span><br><span class="line">      <span class="attr">menuName</span>: <span class="string">&quot;微应用APP1&quot;</span>,</span><br><span class="line">      <span class="attr">submenu</span>: [&#123; <span class="attr">menuUrl</span>: <span class="string">&quot;/app1/dashboard&quot;</span>, <span class="attr">menuName</span>: <span class="string">&quot;工作台&quot;</span> &#125;],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="title function_">registerMicroApps</span>(apps, &#123;</span><br><span class="line">  <span class="comment">//只会执行一次</span></span><br><span class="line">  <span class="attr">beforeLoad</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">  <span class="attr">beforeMount</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">  <span class="attr">afterMount</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">  <span class="attr">beforUnmount</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">  <span class="attr">afterUnmount</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>由于是多台服务器部署，<code>entry</code>和<code>activeRule</code>必须不一样，否则刷新后会变成微应用的页面，<code>entry</code>会被注册为微应用的运行时<code>__webpack_public_path__</code>。例如主应用的当前地址是 <code>http://wwwqiangian.com</code>,按如上配置加载<code>micro-app1</code> 时则会拼接<code>entry</code>,用<code>http://www.qianqian.com/micro-app1/</code>请求微应用的<code>index.html</code>。子应用和 nginx 的配置也需配合改动。</p><h2 id="主应用路由设置"><a href="#主应用路由设置" class="headerlink" title="主应用路由设置"></a>主应用路由设置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;history&quot;</span>,</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>, <span class="attr">name</span>: <span class="string">&quot;login&quot;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/login&quot;</span>) &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;BaseLayout&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        <span class="comment">// 主应用路由</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;dashboard&quot;</span>,</span><br><span class="line">          <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;工作台&quot;</span>, <span class="attr">affix</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;@/views/dashboard/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 确保所有微应用的第一次载入会载入到Layout</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="在主应用动态添加子应用的路由"><a href="#在主应用动态添加子应用的路由" class="headerlink" title="在主应用动态添加子应用的路由"></a>在主应用动态添加子应用的路由</h2><p>在<code>beforeLoad</code>钩子函数中动态添加路由，方便后续路由的管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beforeLoad</span>: <span class="function">(<span class="params">app</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; submenu &#125; = app.<span class="property">props</span>.<span class="property">data</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; entry &#125; = app;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> menu <span class="keyword">of</span> submenu) &#123;</span><br><span class="line">    router.<span class="title function_">addRouter</span>(<span class="string">&quot;BaseLayout&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">path</span>: menu.<span class="property">menuUrl</span>,</span><br><span class="line">      <span class="attr">name</span>: menu.<span class="property">menuUrl</span>,</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: menu.<span class="property">menuName</span>, <span class="attr">isMicroApp</span>: <span class="literal">true</span>, entry &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location &#123;</span><br><span class="line">  charset utf-8;</span><br><span class="line">  root /var/www/html;</span><br><span class="line">  try files $uri $uri/ /index.html;</span><br><span class="line">&#125;</span><br><span class="line"># 代理后端,需要将微应用的全部后端都配置到这里，假设后端地址是http://192.168.1.29:38028</span><br><span class="line">location /backend &#123;</span><br><span class="line">  proxy_pass http://192.168.1.29:38028;</span><br><span class="line">&#125;</span><br><span class="line"># 反向代理微应用 假设微应用的服务器nginx Ip 是 192.168.1.30</span><br><span class="line">location ^~ /micro-app1/ &#123;</span><br><span class="line">  proxy_pass http:// 192.168.1.30/micro-app1/;</span><br><span class="line">  proxy_set_header Host $host:$server_port;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Vue-子应用"><a href="#Vue-子应用" class="headerlink" title="Vue 子应用"></a>Vue 子应用</h1><p>修改 main.js 配合 qiankun 框架 <a href="https://qiankun.umijs.org/zh/guide/tutorial#vue-%E5%BE%AE%E5%BA%94%E7%94%A8">乾坤官网</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./public-path&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> routes <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> instance = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">props = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; container &#125; = props;</span><br><span class="line">  router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">base</span>: <span class="variable language_">window</span>.<span class="property">__POWERED_BY_QIANKUN__</span> ? <span class="string">&quot;/app1/&quot;</span> : <span class="string">&quot;/micro-app1/&quot;</span>,</span><br><span class="line">    <span class="comment">// /micro-app1 与 entry保持一致确保能通过主应用nginx独立访问。</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;history&quot;</span>,</span><br><span class="line">    routes,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  instance = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    router,</span><br><span class="line">    store,</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  &#125;).$mount(container ? container.<span class="title function_">querySelector</span>(<span class="string">&quot;#app&quot;</span>) : <span class="string">&quot;#app&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 独立运行时</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable language_">window</span>.<span class="property">__POWERED_BY_QIANKUN__</span>) &#123;</span><br><span class="line">  <span class="title function_">render</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[vue] vue app bootstraped&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">mount</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[vue] props from main framework&quot;</span>, props);</span><br><span class="line">  <span class="comment">// props 包含注册时写入的参数</span></span><br><span class="line">  <span class="title function_">render</span>(props);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">unmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">  instance.$destroy();</span><br><span class="line">  instance.<span class="property">$el</span>.<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  instance = <span class="literal">null</span>;</span><br><span class="line">  router = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// public-path.js</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">__POWERED_BY_QIANKUN__</span>) &#123;</span><br><span class="line">  __webpack_public_path__ = <span class="variable language_">window</span>.<span class="property">__INJECTED_PUBLIC_PATH_BY_QIANKUN__</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了微应用的 css，js 等文件能正常访问，<code>publicPath</code>需要与<code>entry</code>一致。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vue.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">publicPath</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span> ? <span class="string">&quot;/&quot;</span> : <span class="string">&quot;/micro-app1/&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>同时打包后的文件需要部署在二级目录<code>micro-app1</code>（与<code>entry</code>一致）下。</p><h2 id="nginx-配置-1"><a href="#nginx-配置-1" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location &#123;</span><br><span class="line">  # add_header Access-Control-Allow-Origin *;</span><br><span class="line">  # add_header Access-Control-Allow-Methods &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line">  # add_header Access-Control-Allow-Headers &#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#x27;;</span><br><span class="line"></span><br><span class="line">  charset utf-8:</span><br><span class="line">  root var/www/html:</span><br><span class="line">  files $uri $uri/ /micro-app1/index.html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p><code>http://www.qianqian.com/app1/dashboard</code>是在利用乾坤框架内嵌微应用<br><code>http://www.qianqian.com/micro-app1/dashboard</code>可以独立访问微应用micro-app1</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>element-plus笔记</title>
      <link href="/2023/02/03/element-plus%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/03/element-plus%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="element-plus-结构和依赖"><a href="#element-plus-结构和依赖" class="headerlink" title="element-plus 结构和依赖"></a>element-plus 结构和依赖</h1><p>monorepositories</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">element-plus</span><br><span class="line">├── CHANGELOG.en-US.md <span class="comment"># Changelog</span></span><br><span class="line">├── CODE_OF_CONDUCT.md <span class="comment"># Contributor Covenant Code of Conduct</span></span><br><span class="line">├── CONTRIBUTING.md <span class="comment"># How To Contribute</span></span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── breakings <span class="comment">#</span></span><br><span class="line">├── codecov.yml <span class="comment"># https://docs.codecov.com/docs/codecov-yaml</span></span><br><span class="line">├── commitlint.config.js <span class="comment">#cz-git https://cz-git.qbb.sh/zh/cli/</span></span><br><span class="line">├── commitlint.config.ts</span><br><span class="line">├── docs</span><br><span class="line">├── global.d.ts</span><br><span class="line">├── internal <span class="comment">#构建eslint相关</span></span><br><span class="line">├── package.json</span><br><span class="line">├── packages <span class="comment"># 主体代码</span></span><br><span class="line">├── play <span class="comment"># 使用组件实现demo</span></span><br><span class="line">├── pnpm-lock.yaml</span><br><span class="line">├── pnpm-workspace.yaml <span class="comment">#pnpm worksapce</span></span><br><span class="line">├── scripts</span><br><span class="line">├── ssr-testing</span><br><span class="line">├── tsconfig.base.json <span class="comment"># tsconfig.*.json extends</span></span><br><span class="line">├── tsconfig.json <span class="comment"># https://www.typescriptlang.org/tsconfig#extends</span></span><br><span class="line">├── tsconfig.node.json <span class="comment"># tsconfig.json references</span></span><br><span class="line">├── tsconfig.play.json <span class="comment"># tsconfig.json references</span></span><br><span class="line">├── tsconfig.vite-config.json <span class="comment"># tsconfig.json references</span></span><br><span class="line">├── tsconfig.vitest.json <span class="comment"># tsconfig.json references</span></span><br><span class="line">├── tsconfig.web.json <span class="comment"># tsconfig.json references</span></span><br><span class="line">├── typings <span class="comment"># ts 声明文件</span></span><br><span class="line">├── vitest.config.ts <span class="comment"># Vitest测试框架</span></span><br><span class="line">└── vitest.setup.ts <span class="comment"># Vitest测试框架</span></span><br></pre></td></tr></table></figure><p>部分 packages.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;peerDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/components&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span> <span class="comment">// workspace:https://pnpm.io/workspaces</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/constants&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/directives&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/hooks&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/icons-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/locale&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/test-utils&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/theme-chalk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/tokens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/utils&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@floating-ui/dom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@popperjs/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm:@sxzz/popperjs-es@^2.11.7&quot;</span><span class="punctuation">,</span> <span class="comment">//https://popper.js.org/ TOOLTIP &amp; POPOVER POSITIONING ENGINE</span></span><br><span class="line">    <span class="attr">&quot;@types/lodash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.14.182&quot;</span><span class="punctuation">,</span> <span class="comment">//TypeScript definitions for Lo-Dash</span></span><br><span class="line">    <span class="attr">&quot;@types/lodash-es&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.17.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vueuse/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.1.0&quot;</span><span class="punctuation">,</span> <span class="comment">//Collection of essential Vue Composition Utilities for Vue 2 and 3</span></span><br><span class="line">    <span class="attr">&quot;async-validator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dayjs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.11.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;escape-html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lodash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.17.21&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lodash-es&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.17.21&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lodash-unified&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;memoize-one&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//A memoization library which only remembers the latest invocation</span></span><br><span class="line">    <span class="attr">&quot;normalize-wheel-es&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span> <span class="comment">//Mouse wheel normalization across multiple multiple browsers.</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@commitlint/cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^17.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@commitlint/config-conventional&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^17.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:^0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/build-utils&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:^0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@element-plus/eslint-config&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workspace:*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@esbuild-kit/cjs-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@pnpm/find-workspace-packages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@pnpm/logger&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@pnpm/types&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/fs-extra&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.0.13&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/gulp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/jsdom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.2.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@types/sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.43.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vitejs/plugin-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vitejs/plugin-vue-jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vitest/ui&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.16.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/test-utils&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/tsconfig&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;c8&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.11.3&quot;</span><span class="punctuation">,</span> <span class="comment">// 测试覆盖</span></span><br><span class="line">    <span class="attr">&quot;chalk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.1&quot;</span><span class="punctuation">,</span> <span class="comment">// console style</span></span><br><span class="line">    <span class="attr">&quot;concurrently&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.2.2&quot;</span><span class="punctuation">,</span> <span class="comment">// 并发执行终端命令</span></span><br><span class="line">    <span class="attr">&quot;consola&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.15.3&quot;</span><span class="punctuation">,</span> <span class="comment">//控制台优雅输出记录</span></span><br><span class="line">    <span class="attr">&quot;csstype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.20&quot;</span><span class="punctuation">,</span> <span class="comment">//css type检查</span></span><br><span class="line">    <span class="attr">&quot;cz-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;czg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.18.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-define-config&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.5.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;expect-type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.13.0&quot;</span><span class="punctuation">,</span> <span class="comment">//Compile-time tests for types</span></span><br><span class="line">    <span class="attr">&quot;fast-glob&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.11&quot;</span><span class="punctuation">,</span> <span class="comment">// 返回满足通配符和条件的文件</span></span><br><span class="line">    <span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;jsdom&quot;</span><span class="punctuation">:</span> <span class="string">&quot;16.4.0&quot;</span><span class="punctuation">,</span> <span class="comment">//nodejs下生成dom</span></span><br><span class="line">    <span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^13.0.3&quot;</span><span class="punctuation">,</span> <span class="comment">//commit 执行lint-staged</span></span><br><span class="line">    <span class="attr">&quot;npm-run-all&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.5&quot;</span><span class="punctuation">,</span> <span class="comment">// 并行或顺序执行npm命令</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.7.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;puppeteer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^17.1.3&quot;</span><span class="punctuation">,</span> <span class="comment">//headless chrome</span></span><br><span class="line">    <span class="attr">&quot;resize-observer-polyfill&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.5.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rimraf&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.2&quot;</span><span class="punctuation">,</span> <span class="comment">//A `rm -rf` util for nodejs</span></span><br><span class="line">    <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.53.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts-morph&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^14.0.0&quot;</span><span class="punctuation">,</span> <span class="comment">//AST</span></span><br><span class="line">    <span class="attr">&quot;tsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.6.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type-fest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.14.0&quot;</span><span class="punctuation">,</span> <span class="comment">//A collection of essential TypeScript types</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.7.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-element-plus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;unplugin-vue-macros&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.11.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vitest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.12.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.37&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.16&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-tsc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.38.2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记2022</title>
      <link href="/2022/12/27/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B02022/"/>
      <url>/2022/12/27/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B02022/</url>
      
        <content type="html"><![CDATA[<h1 id="判断质数的方法"><a href="#判断质数的方法" class="headerlink" title="判断质数的方法"></a>判断质数的方法</h1><h2 id="详细内容参考-leetcode-题解"><a href="#详细内容参考-leetcode-题解" class="headerlink" title="详细内容参考 leetcode 题解"></a>详细内容参考 leetcode 题解</h2><p><a href="https://leetcode.cn/problems/count-primes/solutions/507273/ji-shu-zhi-shu-by-leetcode-solution/">计数质数</a></p><h2 id="列举三种方法"><a href="#列举三种方法" class="headerlink" title="列举三种方法"></a>列举三种方法</h2><h3 id="枚举法"><a href="#枚举法" class="headerlink" title="枚举法"></a>枚举法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">isPrime</span> = (<span class="params">x</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i * i &lt;= x; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> countPrimes = <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    ans += <span class="title function_">isPrime</span>(i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="埃氏筛"><a href="#埃氏筛" class="headerlink" title="埃氏筛"></a>埃氏筛</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> countPrimes = <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> isPrime = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">let</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isPrime[i]) &#123;</span><br><span class="line">      ans += <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = i * i; j &lt; n; j += i) &#123;</span><br><span class="line">        isPrime[j] = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="线性筛"><a href="#线性筛" class="headerlink" title="线性筛"></a>线性筛</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> countPrimes = <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> isPrime = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">const</span> primes = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isPrime[i]) &#123;</span><br><span class="line">      primes.<span class="title function_">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; primes.<span class="property">length</span> &amp;&amp; i * primes[j] &lt; n; ++j) &#123;</span><br><span class="line">      isPrime[i * primes[j]] = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> (i % primes[j] === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> primes.<span class="property">length</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a>最大公约数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">gcd</span> = (<span class="params">num1, num2</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">while</span> (num2 !== <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> temp = num1;</span><br><span class="line">    num1 = num2;</span><br><span class="line">    num2 = temp % num2;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> num1;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="数组中好对子的数目"><a href="#数组中好对子的数目" class="headerlink" title="数组中好对子的数目"></a>数组中好对子的数目</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 反转数字</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">rev</span>(<span class="params">num</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> temp = num,</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (temp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    j = j * <span class="number">10</span> + (temp % <span class="number">10</span>);</span><br><span class="line">    temp = <span class="title class_">Math</span>.<span class="title function_">floor</span>(temp / <span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> countNicePairs = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">MOD</span> = <span class="number">1000000007</span>;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> h = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> nums) &#123;</span><br><span class="line">    <span class="keyword">let</span> temp = i,</span><br><span class="line">      j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (temp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      j = j * <span class="number">10</span> + (temp % <span class="number">10</span>);</span><br><span class="line">      temp = <span class="title class_">Math</span>.<span class="title function_">floor</span>(temp / <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 每增加一个相同的则与原先已存在的数量（h.get(i - j)）配对 ,从而不使用排列组合就可求结果</span></span><br><span class="line">    res = (res + (h.<span class="title function_">get</span>(i - j) || <span class="number">0</span>)) % <span class="variable constant_">MOD</span>;</span><br><span class="line">    h.<span class="title function_">set</span>(i - j, (h.<span class="title function_">get</span>(i - j) || <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>前端工具链</title>
      <link href="/2022/09/27/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7%E9%93%BE/"/>
      <url>/2022/09/27/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h1><p>babel tsc esbuild swc</p><blockquote><p>文章:</p><ol><li><a href="http://mp.weixin.qq.com/s?__biz=MzAxODE2MjM1MA==&mid=2651609107&idx=1&sn=1a9852c5b75c93a2cfe1cc75976fbc7e&chksm=80228fd2b75506c44d2f94f73f9652f651c5d4365301e4d373dbc3c0f2184bdae32ba1098bc2&mpshare=1&scene=24&srcid=0927fGiJPN57Wmt8kjnY0eXf&sharer_sharetime=1664263365557&sharer_shareid=bbb30e4f9eba4adc52529e0ffaaacfa9#rd">2022使用的工具链</a></li><li><a href="https://mp.weixin.qq.com/s/U7nTo5ryv52lzfg_wP5BnQ">babel vs tsc</a></li></ol></blockquote><h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><h1 id="vite"><a href="#vite" class="headerlink" title="vite"></a>vite</h1>]]></content>
      
      
      <categories>
          
          <category> 前端-环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
            <tag> webpack </tag>
            
            <tag> esbuild </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>egg</title>
      <link href="/2022/09/24/egg/"/>
      <url>/2022/09/24/egg/</url>
      
        <content type="html"><![CDATA[<h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><h2 id="csrf"><a href="#csrf" class="headerlink" title="csrf"></a>csrf</h2><p>postman csrf 报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config/config.default.js</span></span><br><span class="line">config.<span class="property">security</span> = &#123;</span><br><span class="line">  <span class="attr">csrf</span>: &#123;</span><br><span class="line">    <span class="attr">enable</span>: <span class="literal">false</span>, <span class="comment">// 关闭csrf</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="egg-mysql"><a href="#egg-mysql" class="headerlink" title="egg-mysql"></a>egg-mysql</h1><p><a href="https://www.eggjs.org/zh-CN/tutorials/mysql">docs</a><br>一、安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i egg-mysql --save-dev</span><br></pre></td></tr></table></figure><p>二、配置 Plugin</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config/config.default.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">appInfo</span> =&gt;</span> &#123;</span><br><span class="line">  config.<span class="property">mysql</span> = &#123;</span><br><span class="line">    <span class="attr">client</span>: &#123;</span><br><span class="line">      <span class="attr">host</span>: <span class="string">&#x27;192.168.2.3&#x27;</span>,</span><br><span class="line">      <span class="attr">port</span>: <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">      <span class="attr">user</span>: <span class="string">&#x27;egg&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;egg&#x27;</span>,</span><br><span class="line">      <span class="attr">database</span>: <span class="string">&#x27;egg&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">app</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">agent</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// add your user config here</span></span><br><span class="line">  <span class="keyword">const</span> userConfig = &#123;</span><br><span class="line">    <span class="comment">// myAppName: &#x27;egg&#x27;,</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...config,</span><br><span class="line">    ...userConfig</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Sequelize"><a href="#Sequelize" class="headerlink" title="Sequelize"></a>Sequelize</h1><p><a href="https://www.eggjs.org/zh-CN/tutorials/sequelize">egg docs</a><br><a href="https://sequelize.org/">Sequelize docs</a><br>一、egg-sequelize mysql2 实现 ORM 框架<br>二、Migrations（SQL 脚本 版本管理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要安装 sequelize-cli</span></span><br><span class="line">npm install --save-dev sequelize-cli</span><br></pre></td></tr></table></figure><p>可以在 package.json 中 配置 scripts</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;sequelize&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sequelize&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run sequelize -- db:migrate --<span class="built_in">env</span> development</span><br><span class="line"><span class="comment"># 相当于 npx sequelize db:migrate --env development</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> egg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql8</title>
      <link href="/2022/09/24/Mysql8/"/>
      <url>/2022/09/24/Mysql8/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-运行-mysql8"><a href="#docker-运行-mysql8" class="headerlink" title="docker 运行 mysql8"></a>docker 运行 mysql8</h1><p><a href="https://www.jianshu.com/p/2f4bcf5bf418">简书博客</a></p><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><p>命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><p>说明：<br>username：你将创建的用户名<br>host：指定该用户在哪个主机上可以登陆，如果是本地用户可用 localhost，如果想让该用户可以从任意远程主机登陆，可以使用通配符%<br>password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器<br>例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;dog&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;192.168.1.101_&#x27;</span> IDENDIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="授权"><a href="#授权" class="headerlink" title="授权:"></a>授权:</h1><p>命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> privileges <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span></span><br></pre></td></tr></table></figure><p>说明:<br>privileges：用户的操作权限，如 SELECT，INSERT，UPDATE 等，如果要授予所的权限则使用 ALL<br>databasename：数据库名<br>tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用<em>表示，如</em>.*<br>例子:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> test.user <span class="keyword">TO</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> maindataplus.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>注意:<br>用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> privileges <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure><h1 id="设置与更改用户密码"><a href="#设置与更改用户密码" class="headerlink" title="设置与更改用户密码"></a>设置与更改用户密码</h1><p>命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpassword&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果是当前登陆用户用:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span> PASSWORD(&quot;newpassword&quot;);</span><br></pre></td></tr></table></figure><p>例子:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> PASSWORD(&quot;123456&quot;);</span><br></pre></td></tr></table></figure><h1 id="撤销用户权限"><a href="#撤销用户权限" class="headerlink" title="撤销用户权限"></a>撤销用户权限</h1><p>命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> privilege <span class="keyword">ON</span> databasename.tablename <span class="keyword">FROM</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span>;</span><br></pre></td></tr></table></figure><p>说明:<br>privilege, databasename, tablename：同授权部分</p><p>例子:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="string">&#x27;pig&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>注意:<br>假如你在给用户‘pig‘@’%’授权的时候是这样的（或类似的）：<code>GRANT SELECT ON test.user TO &#39;pig&#39;@&#39;%&#39;</code>，则在使用<code>REVOKE SELECT ON *.* FROM &#39;pig&#39;@&#39;%&#39;;</code> 命令并不能撤销该用户对 test 数据库中 user 表的 SELECT 操作。相反，如果授权使用的是<code>GRANT SELECT ON *.* TO &#39;pig&#39;@&#39;%&#39;;</code> 则<code>REVOKE SELECT ON test.user FROM &#39;pig&#39;@&#39;%&#39;;</code>命令也不能撤销该用户对 test 数据库中 user 表的 Select 权限。</p><p>具体信息可以用命令<code>SHOW GRANTS FOR &#39;pig&#39;@&#39;%&#39;;</code> 查看。</p><h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h1><p>命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span>;</span><br></pre></td></tr></table></figure><p><a href="http://blog.csdn.net/piaocoder/article/details/53704126">参考文章</a></p><h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><h2 id="MySQL-8-caching-sha2-password"><a href="#MySQL-8-caching-sha2-password" class="headerlink" title="MySQL 8 caching_sha2_password"></a>MySQL 8 caching_sha2_password</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host,plugin <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;egg&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span> <span class="operator">|</span> host <span class="operator">|</span> plugin                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> egg  <span class="operator">|</span> <span class="operator">%</span>    <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+------+-----------------------+</span></span><br></pre></td></tr></table></figure><div class="note danger morden flat"><p>Client does not support authentication protocol requested by server; consider upgrading MySQL client;</p></div><div class="note success morden flat"><p>解决</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将 caching_sha2_password 改为 mysql_native_password</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;egg&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;egg&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="Public-Key-Retrieval-is-not-allowed"><a href="#Public-Key-Retrieval-is-not-allowed" class="headerlink" title="Public Key Retrieval is not allowed"></a>Public Key Retrieval is not allowed</h2><div class="note success morden flat"><p>在 JDBC 连接串中加入 allowPublicKeyRetrieval=true 参数；</p></div>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的面试题</title>
      <link href="/2022/08/20/%E6%88%91%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2022/08/20/%E6%88%91%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1-面试自我介绍"><a href="#1-面试自我介绍" class="headerlink" title="1. 面试自我介绍"></a>1. 面试自我介绍</h1><blockquote><p>“面试官您好，非常荣幸参与贵公司**职位的应聘，下面我简单介绍一下我的个人情况，基本信息之类的简历上都有，就不再重复，</p><p>首先介绍一下之前的工作经验……（挑一些跟应聘岗位有链接的内容说，如果有工作荣誉，千万不要漏掉）……，</p><p>之所以离开上一家公司是出于……考虑（离职理由要正当，尽可能从职业发展的角度出发）……</p><p>通过渠道关注到贵公司岗位的招聘信息，该职位跟我未来的职业发展相对契合，而且贵公司的业务（或者企业实力、行业口碑、企业文化等）对我都非常有吸引力，非常渴望能够进入贵公司发展……</p><p>我个人的基本情况是（受教育情况、婚育、住所、家庭简单情况），闲暇之余，我一般会做些**事情（有意义的）……</p><p>或许在所有的求职者当中，我不是最优秀的，但如果贵公司能够给我这个工作机会，我有信心，也有决心做好这份工作，以上是我的个人基本情况，希望今天自己面试有好的表现，未来有幸与诸位面试官共事，也预祝各位度过美好的一天。”</p></blockquote><h1 id="1-CSS"><a href="#1-CSS" class="headerlink" title="1. CSS"></a>1. CSS</h1><h2 id="position-属性的介绍"><a href="#position-属性的介绍" class="headerlink" title="position 属性的介绍"></a>position 属性的介绍</h2><blockquote><p>1、absolute<br>2、relative<br>3、fixed<br>4、sticky</p></blockquote><h2 id="flex-布局的使用"><a href="#flex-布局的使用" class="headerlink" title="flex 布局的使用"></a>flex 布局的使用</h2><h2 id="垂直水平居中"><a href="#垂直水平居中" class="headerlink" title="垂直水平居中"></a>垂直水平居中</h2><h1 id="2-js"><a href="#2-js" class="headerlink" title="2. js"></a>2. js</h1><h2 id="Q：深拷贝浅拷贝"><a href="#Q：深拷贝浅拷贝" class="headerlink" title="Q：深拷贝浅拷贝"></a>Q：深拷贝浅拷贝</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepClone</span>(<span class="params">oldObj</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (oldObj == <span class="literal">null</span>) <span class="keyword">return</span> oldObj;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> oldObj !== <span class="string">&quot;object&quot;</span>) <span class="keyword">return</span> oldObj;</span><br><span class="line">  <span class="keyword">var</span> newObj = <span class="title class_">Array</span>.<span class="title function_">isArray</span>(oldObj) ? [] : &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> oldObj) &#123;</span><br><span class="line">    newObj[key] = <span class="title function_">deepClone</span>(oldObj[key]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newObj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Q-策略模式"><a href="#Q-策略模式" class="headerlink" title="Q: 策略模式"></a>Q: 策略模式</h2><h2 id="Q-原型链"><a href="#Q-原型链" class="headerlink" title="Q: 原型链"></a>Q: 原型链</h2><h2 id="Q-继承的方式"><a href="#Q-继承的方式" class="headerlink" title="Q: 继承的方式"></a>Q: 继承的方式</h2><p><a href="https://segmentfault.com/a/1190000016708006">参考文章</a></p><h2 id="Q-作用域链"><a href="#Q-作用域链" class="headerlink" title="Q: 作用域链"></a>Q: 作用域链</h2><p><a href="https://github.com/mqyqingfeng/Blog/issues/6">参考文章</a></p><h2 id="Q-闭包"><a href="#Q-闭包" class="headerlink" title="Q: 闭包"></a>Q: 闭包</h2><h2 id="Q-函数的自调是不是闭包"><a href="#Q-函数的自调是不是闭包" class="headerlink" title="Q: 函数的自调是不是闭包"></a>Q: 函数的自调是不是闭包</h2><h2 id="Q-TS-的好处"><a href="#Q-TS-的好处" class="headerlink" title="Q: TS 的好处"></a>Q: TS 的好处</h2><h2 id="Q"><a href="#Q" class="headerlink" title="Q:"></a>Q:</h2><h1 id="3-vue"><a href="#3-vue" class="headerlink" title="3. vue"></a>3. vue</h1><h2 id="vue3-和-vue2-的区别"><a href="#vue3-和-vue2-的区别" class="headerlink" title="vue3 和 vue2 的区别"></a>vue3 和 vue2 的区别</h2><h2 id="Q-v-for-中-key-的作用"><a href="#Q-v-for-中-key-的作用" class="headerlink" title="Q:v-for 中 key 的作用"></a>Q:v-for 中 key 的作用</h2><blockquote><p>1、key 属性主要用在 Vue 的虚拟 DOM 算法，在新旧 nodes 对比时辨识 VNodes<br>2、如果不使用 key，Vue 会使用一种最大限度减少动态元素并且尽可能的尝试就地修改/复用相同类型元素的算法；<br>而使用 key 时，它会基于 key 的变化重新排列元素顺序，并且会移除/销毁 key 不存在的元素。逻辑在<code>/runtime-core/renderer.ts</code>文件中。<br>3、无 Key 会执行<code>patchChildren-&gt;patchUnkeyedChildren</code>，从前到后遍历新 Vnode 与旧 Vnode。多出来旧 mount，少了就 unmount。<br>4、有 Key 会执行<code>patchChildren-&gt;patchkeyedChildren</code> &gt; &emsp;&emsp;4.1 取新旧 VNode 中长度小的来遍历 patch。到两个 VNode 的 type 和 key 不一致跳出循环。<br>&emsp;&emsp;4.2 从后往前遍历 patch。到两个 VNode 的 type 和 key 不一致跳出循环。<br>&emsp;&emsp;4.3 多出来进行 mount<br>&emsp;&emsp;4.4 少了进行 unmount<br>&emsp;&emsp;4.5 剩余情况类似顺序打乱，做一些更多的边界判断</p></blockquote><h2 id="Q-响应式原理"><a href="#Q-响应式原理" class="headerlink" title="Q: 响应式原理"></a>Q: 响应式原理</h2><h2 id="Q-生命周期"><a href="#Q-生命周期" class="headerlink" title="Q: 生命周期"></a>Q: 生命周期</h2><h1 id="echarts"><a href="#echarts" class="headerlink" title="echarts"></a>echarts</h1><h2 id="Q-echarts-的实现"><a href="#Q-echarts-的实现" class="headerlink" title="Q: echarts 的实现"></a>Q: echarts 的实现</h2><p><code>init</code> <code>setOption</code> <code>resize</code>等 API</p><h2 id="canvas-原生的使用"><a href="#canvas-原生的使用" class="headerlink" title="canvas 原生的使用"></a>canvas 原生的使用</h2><h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><h2 id="Q-webworker-在-webpack-的使用"><a href="#Q-webworker-在-webpack-的使用" class="headerlink" title="Q: webworker 在 webpack 的使用"></a>Q: webworker 在 webpack 的使用</h2><blockquote><p>可以在将 worker 放在指定文件夹下。配置 loader 指向这个文件夹下的 js 文件</p></blockquote><h2 id="Q-做过什么打包配置"><a href="#Q-做过什么打包配置" class="headerlink" title="Q: 做过什么打包配置"></a>Q: 做过什么打包配置</h2><h1 id="其他开源组件"><a href="#其他开源组件" class="headerlink" title="其他开源组件"></a>其他开源组件</h1><h2 id="Q-富文本编辑器有用过吗"><a href="#Q-富文本编辑器有用过吗" class="headerlink" title="Q: 富文本编辑器有用过吗"></a>Q: 富文本编辑器有用过吗</h2><h2 id="Q-wangEditor-的实现"><a href="#Q-wangEditor-的实现" class="headerlink" title="Q: wangEditor 的实现"></a>Q: wangEditor 的实现</h2>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript基础</title>
      <link href="/2022/08/11/TypeScript%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/08/11/TypeScript%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="1-函数"><a href="#1-函数" class="headerlink" title="1.函数"></a>1.函数</h1><h2 id="1-1-重载"><a href="#1-1-重载" class="headerlink" title="1.1 重载"></a>1.1 重载</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>): <span class="built_in">number</span>; <span class="comment">// 没函数体</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">num1: <span class="built_in">string</span>, num2: <span class="built_in">string</span></span>): <span class="built_in">string</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">num1: <span class="built_in">any</span>, num2: <span class="built_in">any</span></span>): <span class="built_in">any</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> num1 === <span class="string">&#x27;string&#x27;</span> &amp;&amp; <span class="keyword">typeof</span> num2 === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num1.<span class="property">length</span> + num2.<span class="property">length</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">add</span>(<span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line"><span class="keyword">const</span> result2 = <span class="title function_">add</span>(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result2)</span><br></pre></td></tr></table></figure><h1 id="2-Type"><a href="#2-Type" class="headerlink" title="2.Type"></a>2.Type</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> type A = &#123;</span></span><br><span class="line"><span class="comment">  aa:string</span></span><br><span class="line"><span class="comment">  Bb:string</span></span><br><span class="line"><span class="comment">  cc_Dd:strng</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> type B = &#123;</span></span><br><span class="line"><span class="comment">  aa:string</span></span><br><span class="line"><span class="comment">  bb:string</span></span><br><span class="line"><span class="comment">  ccDd:string</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> 写一个camel类型完成这种转换</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> A = &#123;</span><br><span class="line">  <span class="attr">aa</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="title class_">Bb</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">cc_Dd</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">cc_dd_ee</span>: <span class="built_in">boolean</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">CamelCase</span>&lt;<span class="title class_">Str</span> <span class="keyword">extends</span> <span class="built_in">string</span>&gt; =</span><br><span class="line">  <span class="title class_">Str</span> <span class="keyword">extends</span> <span class="string">`<span class="subst">$&#123;infer left&#125;</span>_<span class="subst">$&#123;infer rest&#125;</span>`</span> ? </span><br><span class="line">  <span class="string">`<span class="subst">$&#123;left&#125;</span><span class="subst">$&#123;rest <span class="keyword">extends</span> <span class="string">`<span class="subst">$&#123;infer left1&#125;</span>_<span class="subst">$&#123;infer rest2&#125;</span>`</span> ? CamelCase&lt;Capitalize&lt;<span class="built_in">string</span> &amp; rest&gt;&gt; : Capitalize&lt;<span class="built_in">string</span> &amp; rest&gt;&#125;</span>`</span></span><br><span class="line">  : <span class="title class_">Lowercase</span>&lt;<span class="built_in">string</span> &amp; <span class="title class_">Str</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> camel&lt;obj&gt; = &#123;</span><br><span class="line">  [key <span class="keyword">in</span> keyof obj <span class="keyword">as</span> <span class="title class_">CamelCase</span>&lt;<span class="built_in">string</span> &amp; key&gt;]: obj[key]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> res = camel&lt;A&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins 实现hexo部署至github.io</title>
      <link href="/2022/06/07/jenkins-%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/06/07/jenkins-%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="1、安装nodejs"><a href="#1、安装nodejs" class="headerlink" title="1、安装nodejs"></a>1、安装nodejs</h1><p>参考之前的文章 <a href="https://lwzcode.github.io/2021/06/12/ubuntu18-04%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BAnodejs%E5%92%8Cmariadb/">ubuntu18.04初步搭建nodejs和mariadb</a></p><h1 id="2、配置jdk环境变量"><a href="#2、配置jdk环境变量" class="headerlink" title="2、配置jdk环境变量"></a>2、配置jdk环境变量</h1><p>jenkins和jdk是我从同事服务器里搞来的。省事了。</p><p><code>vim /etc/profile</code>在最下面添加这些配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/home/jdk1.8</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JRE_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_PATH</span></span><br></pre></td></tr></table></figure><p>保存退出，执行<code>source /etc/profile</code></p><h1 id="3、进入jenkins目录"><a href="#3、进入jenkins目录" class="headerlink" title="3、进入jenkins目录"></a>3、进入jenkins目录</h1><p>执行<code>./start.sh</code>即启动jenkins<br>也可以可以打开<code>start.sh</code>修改配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep jenkins | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs --no-run-if-empty <span class="built_in">kill</span> -9</span><br><span class="line"><span class="built_in">nohup</span> java -jar -Xmx256M jenkins.war   --httpPort=8777 &gt; start.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>输入密码进入，选择安装需要的插件</p><h1 id="4、配置github的公钥"><a href="#4、配置github的公钥" class="headerlink" title="4、配置github的公钥"></a>4、配置github的公钥</h1><p>用于执行<code>npx hexo d</code>时可以成功推送到github仓库<br><a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/testing-your-ssh-connection">测试公钥配置是否成功</a><br>centos 的私钥在 <code>/root/.ssh/</code></p><h1 id="5、在jenkins中新建项目"><a href="#5、在jenkins中新建项目" class="headerlink" title="5、在jenkins中新建项目"></a>5、在jenkins中新建项目</h1><p>输入任务名称，选择构建一个自由风格的软件项目</p><h1 id="6、配置项目"><a href="#6、配置项目" class="headerlink" title="6、配置项目"></a>6、配置项目</h1><p>配置git，配置账户密码或者使用密钥链接仓库<br>增加构建执行shell<br>钩子不太会配置,后面再补</p><h1 id="7、构建"><a href="#7、构建" class="headerlink" title="7、构建"></a>7、构建</h1><p>对于我的hexo博客，选择execute shell</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npx hexo clean</span><br><span class="line">npx hexo g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx学习</title>
      <link href="/2022/03/09/nginx%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/03/09/nginx%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-下载大文件到1G就自动暂停导致失败"><a href="#1-下载大文件到1G就自动暂停导致失败" class="headerlink" title="1. 下载大文件到1G就自动暂停导致失败"></a>1. 下载大文件到1G就自动暂停导致失败</h3><p>nginx 的proxy_max_temp_file_size 默认为1024M</p><h3 id="2-443端口-自签名SSL证书"><a href="#2-443端口-自签名SSL证书" class="headerlink" title="2. 443端口+自签名SSL证书"></a>2. 443端口+自签名SSL证书</h3><p>参考文章</p><ul><li><a href="https://blog.dteam.top/posts/2019-04/%E6%9C%AC%E5%9C%B0https%E5%BF%AB%E9%80%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88mkcert.html">自签名证书</a></li><li><a href="https://segmentfault.com/a/1190000022673232">nginx开启ssl</a></li></ul><h3 id="3-响应头的缓存配置"><a href="#3-响应头的缓存配置" class="headerlink" title="3. 响应头的缓存配置"></a>3. 响应头的缓存配置</h3>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端项目搭建</title>
      <link href="/2022/03/02/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/03/02/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="项目搭建规范"><a href="#项目搭建规范" class="headerlink" title="项目搭建规范"></a>项目搭建规范</h1><h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><h3 id="集成-editorconfig-配置"><a href="#集成-editorconfig-配置" class="headerlink" title="集成 editorconfig 配置"></a>集成 editorconfig 配置</h3><p>EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://editorconfig.org</span></span><br><span class="line"></span><br><span class="line"><span class="string">root</span> <span class="string">=</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[<span class="string">*</span>] <span class="comment"># 表示所有文件适用</span></span><br><span class="line"><span class="string">charset</span> <span class="string">=</span> <span class="string">utf-8</span> <span class="comment"># 设置文件字符集为 utf-8</span></span><br><span class="line"><span class="string">indent_style</span> <span class="string">=</span> <span class="string">space</span> <span class="comment"># 缩进风格（tab | space）</span></span><br><span class="line"><span class="string">indent_size</span> <span class="string">=</span> <span class="number">2</span> <span class="comment"># 缩进大小</span></span><br><span class="line"><span class="string">end_of_line</span> <span class="string">=</span> <span class="string">lf</span> <span class="comment"># 控制换行类型(lf | cr | crlf)</span></span><br><span class="line"><span class="string">trim_trailing_whitespace</span> <span class="string">=</span> <span class="literal">true</span> <span class="comment"># 去除行首的任意空白字符</span></span><br><span class="line"><span class="string">insert_final_newline</span> <span class="string">=</span> <span class="literal">true</span> <span class="comment"># 始终在文件末尾插入一个新行</span></span><br><span class="line"></span><br><span class="line">[<span class="string">*.md</span>] <span class="comment"># 表示仅 md 文件适用以下规则</span></span><br><span class="line"><span class="string">max_line_length</span> <span class="string">=</span> <span class="string">off</span></span><br><span class="line"><span class="string">trim_trailing_whitespace</span> <span class="string">=</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>VSCode 需要安装一个插件：EditorConfig for VS Code</p><h3 id="使用-prettier-工具"><a href="#使用-prettier-工具" class="headerlink" title="使用 prettier 工具"></a>使用 prettier 工具</h3><p>Prettier 是一款强大的代码格式化工具，支持 JavaScript、TypeScript、CSS、SCSS、Less、JSX、Angular、Vue、GraphQL、JSON、Markdown 等语言，基本上前端能用到的文件格式它都可以搞定，是当下最流行的代码格式化工具。</p><p>1.安装 prettier</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prettier -D</span><br></pre></td></tr></table></figure><p>2.配置.prettierrc 文件：</p><ul><li>useTabs：使用 tab 缩进还是空格缩进，选择 false；</li><li>tabWidth：tab 是空格的情况下，是几个空格，选择 2 个；</li><li>printWidth：当行字符的长度，推荐 80，也有人喜欢 100 或者 120；</li><li>singleQuote：使用单引号还是双引号，选择 true，使用单引号；</li><li>trailingComma：在多行输入的尾逗号是否添加，设置为 <code>none</code>；</li><li>semi：语句末尾是否要加分号，默认值 true，选择 false 表示不加；</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;useTabs&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tabWidth&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;printWidth&quot;</span><span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>3.创建.prettierignore 忽略文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/dist/*</span><br><span class="line">.local</span><br><span class="line">.output.js</span><br><span class="line">/node_modules/**</span><br><span class="line"></span><br><span class="line">**/*.svg</span><br><span class="line">**/*.sh</span><br><span class="line"></span><br><span class="line">/public/*</span><br></pre></td></tr></table></figure><p>4.VSCode 需要安装 prettier 的插件</p><p>5.测试 prettier 是否生效</p><ul><li>测试一：在代码中保存代码；</li><li>测试二：配置一次性修改的命令；</li></ul><p>在 package.json 中配置一个 scripts：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write .&quot;</span></span><br></pre></td></tr></table></figure><h3 id="使用-ESLint-检测"><a href="#使用-ESLint-检测" class="headerlink" title="使用 ESLint 检测"></a>使用 ESLint 检测</h3><p>1.在前面创建项目的时候，我们就选择了 ESLint，所以 Vue 会默认帮助我们配置需要的 ESLint 环境。</p><p>2.VSCode 需要安装 ESLint 插件：</p><p>3.解决 eslint 和 prettier 冲突的问题：</p><p>安装插件：（vue 在创建项目时，如果选择 prettier，那么这两个插件会自动安装）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i eslint-plugin-prettier eslint-config-prettier -D</span><br></pre></td></tr></table></figure><p>添加 prettier 插件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extends<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="string">&quot;plugin:vue/vue3-essential&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;eslint:recommended&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;@vue/typescript/recommended&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;@vue/prettier&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;@vue/prettier/@typescript-eslint&quot;</span><span class="punctuation">,</span></span><br><span class="line">  &#x27;plugin<span class="punctuation">:</span>prettier/recommended&#x27;</span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h3 id="git-Husky-和-eslint"><a href="#git-Husky-和-eslint" class="headerlink" title="git Husky 和 eslint"></a>git Husky 和 eslint</h3><p>虽然我们已经要求项目使用 eslint 了，但是不能保证组员提交代码之前都将 eslint 中的问题解决掉了：</p><ul><li><p>也就是我们希望保证代码仓库中的代码都是符合 eslint 规范的；</p></li><li><p>那么我们需要在组员执行 <code>git commit </code> 命令的时候对其进行校验，如果不符合 eslint 规范，那么自动通过规范进行修复；</p></li></ul><p>那么如何做到这一点呢？</p><h4 id="Husky"><a href="#Husky" class="headerlink" title="Husky"></a>Husky</h4><ul><li>husky 是一个 git hook 工具，可以帮助我们触发 git 提交的各个阶段：pre-commit、commit-msg、pre-push</li></ul><p>如何使用 husky 呢？</p><p>这里我们可以使用自动配置命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky-init &amp;&amp; npm install</span><br></pre></td></tr></table></figure><p>这里会做三件事：</p><p>1.安装 <code>husky</code> 相关的依赖：</p><p>2.在项目目录下创建 <code>.husky</code> 文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx huksy install</span><br></pre></td></tr></table></figure><p><img src="https://dsm01pap001files.storage.live.com/y4mzqsdkuxtLTj0hS84wPGzi64WKw5fTZ1Jr9tnCiSmtE9vp9d-4Z3aG5koFxolJesgLM1lgpDpQjWzXpTBD94Ji7d2Q4LKTUM9WSMs_7l6WPH-4GtM6w30u2lA8UZNc395sH5Mc7iL83zVVFKFDSPObPywNpW573p-iLX-PnwTeMpJzbr--yRWOxu71RKobUTw?width=259&height=130&cropmode=none" alt="image-20210723112719634"></p><p>3.在 package.json 中添加一个脚本：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prepare&quot;</span><span class="punctuation">:</span> <span class="string">&quot;husky install&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>接下来，我们需要去完成一个操作：在进行 commit 时，执行 lint 脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文件：/.husky/pre-commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env sh</span></span><br><span class="line">. <span class="string">&quot;<span class="subst">$(dirname -- <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span></span><br><span class="line"></span><br><span class="line">npm run lint</span><br></pre></td></tr></table></figure><h4 id="simple-git-hooks"><a href="#simple-git-hooks" class="headerlink" title="simple-git-hooks"></a>simple-git-hooks</h4><p>相比于 husky，<a href="https://github.com/toplenboren/simple-git-hooks">simple-git-hooks</a>体积更小。 1.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install simple-git-hooks --save-dev</span><br></pre></td></tr></table></figure><p>2.配置<br>添加<code>simple-git-hooks</code>到<code>package.json</code>,例如 vue 的配置如下。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;simple-git-hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pre-commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pnpm lint-staged&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commit-msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node scripts/verifyCommit.mjs&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//verifyCommit.mjs</span></span><br><span class="line"><span class="keyword">import</span> chalk <span class="keyword">from</span> <span class="string">&quot;chalk&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; readFileSync &#125; <span class="keyword">from</span> <span class="string">&quot;fs&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&quot;path&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&quot;url&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dirname = path.<span class="title function_">dirname</span>(<span class="title function_">fileURLToPath</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>), <span class="string">&quot;..&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> msgPath = path.<span class="title function_">resolve</span>(dirname, <span class="string">&quot;../.git/COMMIT_EDITMSG&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> msg = <span class="title function_">readFileSync</span>(msgPath, <span class="string">&quot;utf-8&quot;</span>).<span class="title function_">trim</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> commitRE =</span><br><span class="line">  <span class="regexp">/^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\(.+\))?: .&#123;1,50&#125;/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!commitRE.<span class="title function_">test</span>(msg)) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">error</span>(</span><br><span class="line">    <span class="string">`  <span class="subst">$&#123;chalk.bgRed.white(<span class="string">&quot; ERROR &quot;</span>)&#125;</span> <span class="subst">$&#123;chalk.red(</span></span></span><br><span class="line"><span class="subst"><span class="string">      <span class="string">`invalid commit message format.`</span></span></span></span><br><span class="line"><span class="subst"><span class="string">    )&#125;</span>\n\n`</span> +</span><br><span class="line">      chalk.<span class="title function_">red</span>(</span><br><span class="line">        <span class="string">`  Proper commit message format is required for automated changelog generation. Examples:\n\n`</span></span><br><span class="line">      ) +</span><br><span class="line">      <span class="string">`    <span class="subst">$&#123;chalk.green(<span class="string">`feat(compiler): add &#x27;comments&#x27; option`</span>)&#125;</span>\n`</span> +</span><br><span class="line">      <span class="string">`    <span class="subst">$&#123;chalk.green(</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="string">`fix(v-model): handle events on blur (close #28)`</span></span></span></span><br><span class="line"><span class="subst"><span class="string">      )&#125;</span>\n\n`</span> +</span><br><span class="line">      chalk.<span class="title function_">red</span>(<span class="string">`  See .github/commit-convention.md for more details.\n`</span>)</span><br><span class="line">  );</span><br><span class="line">  process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以配置到外部文件 <code>.simple-git-hooks.cjs</code>, <code>.simple-git-hooks.js</code>, <code>simple-git-hooks.cjs</code>, <code>simple-git-hooks.js</code>, <code>.simple-git-hooks.json</code> 或者 <code>simple-git-hooks.json</code></p><p>3.更新 hooks</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx simple-git-hooks</span><br></pre></td></tr></table></figure><p>这个时候我们执行 git commit 的时候会自动对代码进行 lint 校验。</p><h3 id="git-commit-规范"><a href="#git-commit-规范" class="headerlink" title="git commit 规范"></a>git commit 规范</h3><h4 id="代码提交风格"><a href="#代码提交风格" class="headerlink" title="代码提交风格"></a>代码提交风格</h4><p>通常我们的 git commit 会按照统一的风格来提交，这样可以快速定位每次提交的内容，方便之后对版本进行控制。</p><p>但是如果每次手动来编写这些是比较麻烦的事情，我们可以使用一个工具：Commitizen</p><ul><li><p>Commitizen 是一个帮助我们编写规范 commit message 的工具；</p><p>1.安装 Commitizen</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install commitizen -D</span><br></pre></td></tr></table></figure><p>2.安装 <a href="https://github.com/commitizen/cz-conventional-changelog">cz-conventional-changelog</a>，并且初始化 cz-conventional-changelog：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx commitizen init cz-conventional-changelog --save-dev --save-exact</span><br></pre></td></tr></table></figure><p>这个命令会帮助我们安装 cz-conventional-changelog：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;cz-conventional-changelog&quot;</span><span class="punctuation">:</span><span class="string">&quot;^3.3.0&quot;</span></span><br></pre></td></tr></table></figure><p>并且在 package.json 中进行配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">// ...  default values</span></span><br><span class="line">    <span class="string">&quot;config&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;commitizen&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span>: <span class="string">&quot;./node_modules/cz-conventional-changelog&quot;</span>,</span><br><span class="line">            <span class="string">&quot;disableScopeLowerCase&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;disableSubjectLowerCase&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;maxHeaderWidth&quot;</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="string">&quot;maxLineWidth&quot;</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="string">&quot;defaultType&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;defaultScope&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;defaultSubject&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;defaultBody&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;defaultIssues&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;types&quot;</span>: &#123;</span><br><span class="line">              ...</span><br><span class="line">              <span class="string">&quot;feat&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;A new feature&quot;</span>,</span><br><span class="line">                <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Features&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              ...</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候我们提交代码需要使用 <code>npx cz</code>：</p><ul><li>第一步是选择 type，本次更新的类型</li></ul><table><thead><tr><th>Type</th><th>作用</th></tr></thead><tbody><tr><td>feat</td><td>新增特性 (feature)</td></tr><tr><td>fix</td><td>修复 Bug(bug fix)</td></tr><tr><td>docs</td><td>修改文档 (documentation)</td></tr><tr><td>style</td><td>代码格式修改(white-space, formatting, missing semi colons, etc)</td></tr><tr><td>refactor</td><td>代码重构(refactor)</td></tr><tr><td>perf</td><td>改善性能(A code change that improves performance)</td></tr><tr><td>test</td><td>测试(when adding missing tests)</td></tr><tr><td>build</td><td>变更项目构建或外部依赖（例如 scopes: webpack、gulp、npm 等）</td></tr><tr><td>ci</td><td>更改持续集成软件的配置文件和 package 中的 scripts 命令，例如 scopes: Travis, Circle 等</td></tr><tr><td>chore</td><td>变更构建流程或辅助工具(比如更改测试环境)</td></tr><tr><td>revert</td><td>代码回退</td></tr></tbody></table><ul><li>第二步选择本次修改的范围（作用域）</li></ul><ul><li>第三步选择提交的信息</li></ul><ul><li>第四步提交详细的描述信息</li></ul><ul><li>第五步是否是一次重大的更改</li></ul><ul><li>第六步是否影响某个 open issue</li></ul><p>我们也可以在 scripts 中构建一个命令来执行 cz：</p><h4 id="代码提交验证"><a href="#代码提交验证" class="headerlink" title="代码提交验证"></a>代码提交验证</h4><p>如果我们按照 cz 来规范了提交风格，但是依然有同事通过 <code>git commit</code> 按照不规范的格式提交应该怎么办呢？</p><ul><li><p>我们可以通过 commitlint 来限制提交；</p><p>1.安装 @commitlint/config-conventional 和 @commitlint/cli</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @commitlint/config-conventional @commitlint/cli -D</span><br></pre></td></tr></table></figure><p>2.在根目录创建 commitlint.config.js 文件，配置 commitlint</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;@commitlint/config-conventional&quot;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>3.使用 husky 生成 commit-msg 文件，验证提交信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/commit-msg &quot;npx --no-install commitlint --edit $1&quot;</span><br></pre></td></tr></table></figure><h2 id="第三方库集成"><a href="#第三方库集成" class="headerlink" title="第三方库集成"></a>第三方库集成</h2><h3 id="vue-config-js-配置"><a href="#vue-config-js-配置" class="headerlink" title="vue.config.js 配置"></a>vue.config.js 配置</h3><p>vue.config.js 有三种配置方式：</p><ul><li>方式一：直接通过 CLI 提供给我们的选项来配置：<ul><li>比如 publicPath：配置应用程序部署的子目录（默认是 <code>/</code>，相当于部署在 <code>https://www.my-app.com/</code>）；</li><li>比如 outputDir：修改输出的文件夹；</li></ul></li><li>方式二：通过 configureWebpack 修改 webpack 的配置：<ul><li>可以是一个对象，直接会被合并；</li><li>可以是一个函数，会接收一个 config，可以通过 config 来修改配置；</li></ul></li><li>方式三：通过 chainWebpack 修改 webpack 的配置：<ul><li>是一个函数，会接收一个基于 <a href="https://github.com/mozilla-neutrino/webpack-chain">webpack-chain</a> 的 config 对象，可以对配置进行修改；</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&quot;./build&quot;</span>,</span><br><span class="line">  <span class="comment">// configureWebpack: &#123;</span></span><br><span class="line">  <span class="comment">//   resolve: &#123;</span></span><br><span class="line">  <span class="comment">//     alias: &#123;</span></span><br><span class="line">  <span class="comment">//       views: &#x27;@/views&#x27;</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// configureWebpack: (config) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   config.resolve.alias = &#123;</span></span><br><span class="line">  <span class="comment">//     &#x27;@&#x27;: path.resolve(__dirname, &#x27;src&#x27;),</span></span><br><span class="line">  <span class="comment">//     views: &#x27;@/views&#x27;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="attr">chainWebpack</span>: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    config.<span class="property">resolve</span>.<span class="property">alias</span></span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;@&quot;</span>, path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src&quot;</span>))</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;views&quot;</span>, <span class="string">&quot;@/views&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="vue-router-集成"><a href="#vue-router-集成" class="headerlink" title="vue-router 集成"></a>vue-router 集成</h3><p>安装 vue-router 的最新版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@next</span><br></pre></td></tr></table></figure><p>创建 router 对象：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RouteRecordRaw</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">routes</span>: <span class="title class_">RouteRecordRaw</span>[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/main&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/main&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;../views/main/main.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&quot;../views/login/login.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>安装 router：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>在 App.vue 中配置跳转：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/main&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="vuex-集成"><a href="#vuex-集成" class="headerlink" title="vuex 集成"></a>vuex 集成</h3><p>安装 vuex：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex@next</span><br></pre></td></tr></table></figure><p>创建 store 对象：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;coderwhy&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><p>安装 store：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">use</span>(store).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><p>在 App.vue 中使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; $store.state.name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="element-plus-集成"><a href="#element-plus-集成" class="headerlink" title="element-plus 集成"></a>element-plus 集成</h3><p>Element Plus，一套为开发者、设计师和产品经理准备的基于 Vue 3.0 的桌面端组件库</p><p>安装 element-plus</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus</span><br></pre></td></tr></table></figure><h4 id="全局引入"><a href="#全局引入" class="headerlink" title="全局引入"></a>全局引入</h4><p>一种引入 element-plus 的方式是全局引入，代表的含义是所有的组件和插件都会被自动注册：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/lib/theme-chalk/index.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">use</span>(store).<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="局部引入"><a href="#局部引入" class="headerlink" title="局部引入"></a>局部引入</h4><p>也就是在开发中用到某个组件对某个组件进行引入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-link to=&quot;/login&quot;&gt;登录&lt;/router-link&gt;</span><br><span class="line">    &lt;router-link to=&quot;/main&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h2&gt;&#123;&#123; $store.state.name &#125;&#125;&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-button&gt;默认按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot;&gt;主要按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;success&quot;&gt;成功按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;info&quot;&gt;信息按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;warning&quot;&gt;警告按钮&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;danger&quot;&gt;危险按钮&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineComponent &#125; from &quot;vue&quot;;</span><br><span class="line"></span><br><span class="line">import &#123; ElButton &#125; from &quot;element-plus&quot;;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    ElButton,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>但是我们会发现是没有对应的样式的，引入样式有两种方式：</p><ul><li><p>全局引用样式（像之前做的那样）；</p></li><li><p>局部引用样式（通过 babel 的插件）；</p><p>1.安装 babel 的插件：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-plugin-import -D</span><br></pre></td></tr></table></figure><p>2.配置 babel.config.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">&quot;import&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">libraryName</span>: <span class="string">&quot;element-plus&quot;</span>,</span><br><span class="line">        <span class="attr">customStyleName</span>: <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">`element-plus/lib/theme-chalk/<span class="subst">$&#123;name&#125;</span>.css`</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">presets</span>: [<span class="string">&quot;@vue/cli-plugin-babel/preset&quot;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是这里依然有个弊端：</p><ul><li>这些组件我们在多个页面或者组件中使用的时候，都需要导入并且在 components 中进行注册；</li><li>所以我们可以将它们在全局注册一次；</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">ElButton</span>,</span><br><span class="line">  <span class="title class_">ElTable</span>,</span><br><span class="line">  <span class="title class_">ElAlert</span>,</span><br><span class="line">  <span class="title class_">ElAside</span>,</span><br><span class="line">  <span class="title class_">ElAutocomplete</span>,</span><br><span class="line">  <span class="title class_">ElAvatar</span>,</span><br><span class="line">  <span class="title class_">ElBacktop</span>,</span><br><span class="line">  <span class="title class_">ElBadge</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> components = [</span><br><span class="line">  <span class="title class_">ElButton</span>,</span><br><span class="line">  <span class="title class_">ElTable</span>,</span><br><span class="line">  <span class="title class_">ElAlert</span>,</span><br><span class="line">  <span class="title class_">ElAside</span>,</span><br><span class="line">  <span class="title class_">ElAutocomplete</span>,</span><br><span class="line">  <span class="title class_">ElAvatar</span>,</span><br><span class="line">  <span class="title class_">ElBacktop</span>,</span><br><span class="line">  <span class="title class_">ElBadge</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> cpn <span class="keyword">of</span> components) &#123;</span><br><span class="line">  app.<span class="title function_">component</span>(cpn.<span class="property">name</span>, cpn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="axios-集成"><a href="#axios-集成" class="headerlink" title="axios 集成"></a>axios 集成</h3><p>安装 axios：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>封装 axios：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios, &#123; <span class="title class_">AxiosInstance</span>, <span class="title class_">AxiosRequestConfig</span>, <span class="title class_">AxiosResponse</span> &#125; <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Result</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&quot;/@/store/modules/user&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HYRequest</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="attr">instance</span>: <span class="title class_">AxiosInstance</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="attr">options</span>: <span class="title class_">AxiosRequestConfig</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">options: AxiosRequestConfig</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">options</span> = options;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span> = axios.<span class="title function_">create</span>(options);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> token = <span class="title function_">useUserStore</span>().<span class="property">getToken</span>;</span><br><span class="line">        <span class="keyword">if</span> (token) &#123;</span><br><span class="line">          config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 拦截响应的数据</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> res.<span class="property">data</span>.<span class="property">data</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="property">data</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">config</span>: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">instance</span></span><br><span class="line">        .<span class="property">request</span>&lt;<span class="built_in">any</span>, <span class="title class_">AxiosResponse</span>&lt;<span class="title class_">Result</span>&lt;T&gt;&gt;&gt;(config)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(res <span class="keyword">as</span> unknown <span class="keyword">as</span> <span class="title class_">Promise</span>&lt;T&gt;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">reject</span>(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  get&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">config</span>: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  post&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">config</span>: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  patch&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">config</span>: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">delete</span>&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">config</span>: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">HYRequest</span>;</span><br></pre></td></tr></table></figure><h3 id="VSCode-配置"><a href="#VSCode-配置" class="headerlink" title="VSCode 配置"></a>VSCode 配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;workbench.iconTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vscode-great-icons&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.migration.2_x&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;[javascript]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dbaeumer.vscode-eslint&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;files.autoSave&quot;</span><span class="punctuation">:</span> <span class="string">&quot;afterDelay&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.renderWhitespace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;all&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.quickSuggestions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;strings&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug.console.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window.zoomLevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;emmet.includeLanguages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;javascript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;javascriptreact&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;explorer.confirmDragAndDrop&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;workbench.tree.indent&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;javascript.updateImportsOnFileMove.enabled&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.wordWrap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;path-intellisense.mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/src&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hediet.vscode-drawio.local-storage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyIuZHJhd2lvLWNvbmZpZyI6IntcImxhbmd1YWdlXCI6XCJcIixcImN1c3RvbUZvbnRzXCI6W10sXCJsaWJyYXJpZXNcIjpcImdlbmVyYWw7YmFzaWM7YXJyb3dzMjtmbG93Y2hhcnQ7ZXI7c2l0ZW1hcDt1bWw7YnBtbjt3ZWJpY29uc1wiLFwiY3VzdG9tTGlicmFyaWVzXCI6W1wiTC5zY3JhdGNocGFkXCJdLFwicGx1Z2luc1wiOltdLFwicmVjZW50Q29sb3JzXCI6W1wiRkYwMDAwXCIsXCIwMENDNjZcIixcIm5vbmVcIixcIkNDRTVGRlwiLFwiNTI1MjUyXCIsXCJGRjMzMzNcIixcIjMzMzMzM1wiLFwiMzMwMDAwXCIsXCIwMENDQ0NcIixcIkZGNjZCM1wiLFwiRkZGRkZGMDBcIl0sXCJmb3JtYXRXaWR0aFwiOjI0MCxcImNyZWF0ZVRhcmdldFwiOmZhbHNlLFwicGFnZUZvcm1hdFwiOntcInhcIjowLFwieVwiOjAsXCJ3aWR0aFwiOjExNjksXCJoZWlnaHRcIjoxNjU0fSxcInNlYXJjaFwiOnRydWUsXCJzaG93U3RhcnRTY3JlZW5cIjp0cnVlLFwiZ3JpZENvbG9yXCI6XCIjZDBkMGQwXCIsXCJkYXJrR3JpZENvbG9yXCI6XCIjNmU2ZTZlXCIsXCJhdXRvc2F2ZVwiOnRydWUsXCJyZXNpemVJbWFnZXNcIjpudWxsLFwib3BlbkNvdW50ZXJcIjowLFwidmVyc2lvblwiOjE4LFwidW5pdFwiOjEsXCJpc1J1bGVyT25cIjpmYWxzZSxcInVpXCI6XCJcIn0ifQ==&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hediet.vscode-drawio.theme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Kennedy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Source Code Pro, &#x27;Courier New&#x27;, monospace&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.smoothScrolling&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;workbench.colorTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Atom One Dark&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;vetur.completion.autoImport&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;security.workspace.trust.untrustedFiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;open&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.lintTask.enable&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eslint.alwaysShowStatus&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source.fixAll.eslint&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端-环境 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript+Vue3</title>
      <link href="/2022/02/23/TypeScript-Vue3/"/>
      <url>/2022/02/23/TypeScript-Vue3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab 配置邮箱</title>
      <link href="/2022/01/28/gitlab-%E9%85%8D%E7%BD%AE%E9%82%AE%E7%AE%B1/"/>
      <url>/2022/01/28/gitlab-%E9%85%8D%E7%BD%AE%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="1、宝塔安装Gitlab社区版"><a href="#1、宝塔安装Gitlab社区版" class="headerlink" title="1、宝塔安装Gitlab社区版"></a>1、宝塔安装Gitlab社区版</h2><h2 id="2、Gitlab邮箱配置"><a href="#2、Gitlab邮箱配置" class="headerlink" title="2、Gitlab邮箱配置"></a>2、Gitlab邮箱配置</h2><p>参考<a href="https://juejin.cn/post/6991924908242501669">Gitlab服务器邮箱配置，实现自动为用户发送邮件</a><br><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4a344b729f6045f8a4c1d83f13f4dbf3~tplv-k3u1fbpfcp-watermark.awebp"><br>修改完成并保存后，在终端运行gitlab-ctl reconfigure使配置生效。</p><h2 id="3、重启失败的解决"><a href="#3、重启失败的解决" class="headerlink" title="3、重启失败的解决"></a>3、重启失败的解决</h2><p>解决方法一：</p><blockquote><p>把 /opt/gitlab/sv/nginx/run 里面的 exec chpst -P /opt/gitlab/embedded/sbin/nginx -p /var/opt/gitlab/nginx 改为 exec chpst -P /opt/gitlab/embedded/sbin/gitlab-web -p /var/opt/gitlab/nginx<br>解决方法二：<br>mv /opt/gitlab/embedded/sbin/nginx /opt/gitlab/embedded/sbin/gitlab-web</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller 打包 pandas</title>
      <link href="/2022/01/01/pyinstaller-%E6%89%93%E5%8C%85-pandas/"/>
      <url>/2022/01/01/pyinstaller-%E6%89%93%E5%8C%85-pandas/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>给朋友写一个excel脚本，引入了如下模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>用 anaconda 的环境运行pyinstaller -F 打包单个exe之后的体积很大，达到了300多M。网络搜索如何缩小提及后。考虑使用docker</p><h1 id="二、docker环境及容器环境配置"><a href="#二、docker环境及容器环境配置" class="headerlink" title="二、docker环境及容器环境配置"></a>二、docker环境及容器环境配置</h1><h2 id="1、安装docker"><a href="#1、安装docker" class="headerlink" title="1、安装docker"></a>1、安装docker</h2><p>我的腾讯云正好有安装好的docker，windows也可以安装，便不再赘述。</p><h2 id="2、拉取镜像"><a href="#2、拉取镜像" class="headerlink" title="2、拉取镜像"></a>2、拉取镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull cdrx/pyinstaller-windows</span><br></pre></td></tr></table></figure><h2 id="3、启动容器，以命令行进入"><a href="#3、启动容器，以命令行进入" class="headerlink" title="3、启动容器，以命令行进入"></a>3、启动容器，以命令行进入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /home/python/docker/:/home/ cdrx/pyinstaller-windows /bin/bash</span><br></pre></td></tr></table></figure><p><code>/home/python/docker/:/home/</code> 这个参数是挂载我宿主机<code>/home/python/docker/</code>文件夹到容器的<code>/home/</code>文件夹，方便后续下载打包好的程序。</p><h2 id="4、配置容器的python环境"><a href="#4、配置容器的python环境" class="headerlink" title="4、配置容器的python环境"></a>4、配置容器的python环境</h2><p>在容器的命令行执行<code>pip list</code>发现，只有寥寥几个包。<br>因为我用到的pandas，所以直接 安装了如下几个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br><span class="line">pip install openpyxl</span><br><span class="line">pip install xlsxwriter</span><br></pre></td></tr></table></figure><p>打包，并无报错，执行报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Missing optional dependency <span class="string">&#x27;jinja2&#x27;</span>. DataFrame.style requires jinja2</span><br></pre></td></tr></table></figure><p>遂<code>pip install jinja2</code><br>打包执行，问题还是没解决。参考一个issue【<a href="https://github.com/pyinstaller/pyinstaller/issues/5360">pyinstaller</a>】后，尝试更新pyinstaller版本</p><p>执行 <code>pip install --upgrade pyinstaller</code>，编译打包执行，完美，28M。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022前端总结</title>
      <link href="/2022/01/01/2022%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93/"/>
      <url>/2022/01/01/2022%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>一个利用闭包实现的函数参数重载</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addMethod</span>(<span class="params">object, name, fn</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> old = object[name];</span><br><span class="line">  object[name] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(fn.<span class="property">length</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="variable language_">arguments</span>.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">if</span> (fn.<span class="property">length</span> == <span class="variable language_">arguments</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fn&quot;</span>, fn);</span><br><span class="line">      <span class="keyword">return</span> fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> old == <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;old&quot;</span>, old);</span><br><span class="line">      <span class="keyword">return</span> old.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line"><span class="title function_">addMethod</span>(a, <span class="string">&quot;eat&quot;</span>, <span class="keyword">function</span> (<span class="params">food</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;eat2: &quot;</span>, food);</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">arguments</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">addMethod</span>(a, <span class="string">&quot;eat&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;eat吃&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">arguments</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="title function_">addMethod</span>(a, <span class="string">&quot;eat&quot;</span>, <span class="keyword">function</span> (<span class="params">food, num</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;eat3: &quot;</span>, food, <span class="string">&quot;  &quot;</span>, num, <span class="string">&quot;次&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">arguments</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// console.log(&quot;a.eat&quot;, a.eat);</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">eat</span>(<span class="string">&quot;apple&quot;</span>, <span class="number">2</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">eat</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">eat</span>(<span class="string">&quot;apple&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>blob转dataUrl大于2M导致下载失败。使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这个 URL 的生命周期和创建它的窗口中的 document 绑定。*/</span></span><br><span class="line">objectURL = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(object);</span><br><span class="line"><span class="comment">/*结束使用某个 URL 对象之后，应该通过调用这个方法来让浏览器知道不用在内存中继续保留对这个文件的引用了。*/</span></span><br><span class="line"><span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(objectURL);</span><br></pre></td></tr></table></figure><p>响应头 Content-Disposition</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: inline</span><br><span class="line">Content-Disposition: attachment</span><br><span class="line">Content-Disposition: attachment; filename=&quot;filename.jpg&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>node配置</title>
      <link href="/2021/12/24/node%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/12/24/node%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>1、配置</p><ul><li>找到 nodejs 安装文件夹目录</li><li>新建 node_global 和 node_cache 文件夹</li><li>node_global 文件夹中新建 node_modules 文件夹</li><li>打开 cmd <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;E:\nodejs\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;E:\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure></li></ul><p>2、环境变量</p><ul><li>node 环境变量安装时已配置，可以在系统变量 path 中找到</li><li>这里是配置 node_modules 中插件环境变量</li><li>系统变量中新建 NODE_HOME 指向新建的 node_global/node_modules 文件夹</li><li>用户变量中加上 node_global 路径<br>复制代码</li></ul><p>3、设置 npm 下载镜像</p><ul><li>打开 cmd<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></li><li>查看 nodejs 配置<br>npm config list</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端-环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21年前端总结</title>
      <link href="/2021/09/21/21%E5%B9%B49%E3%80%8110%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93/"/>
      <url>/2021/09/21/21%E5%B9%B49%E3%80%8110%E5%89%8D%E7%AB%AF%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><h4 id="1、form表单视图不更新"><a href="#1、form表单视图不更新" class="headerlink" title="1、form表单视图不更新"></a>1、form表单视图不更新</h4><p>主要是老忘记使用<code>$set</code>设置对象的值，破坏了vue的动态响应</p><h4 id="2、element的table组件自定义表头使用了表单元素，但是视图不更新"><a href="#2、element的table组件自定义表头使用了表单元素，但是视图不更新" class="headerlink" title="2、element的table组件自定义表头使用了表单元素，但是视图不更新"></a>2、element的table组件自定义表头使用了表单元素，但是视图不更新</h4><p>加上作用域插槽</p><h4 id="3、元素鼠标悬浮多了莫名其妙的提示框"><a href="#3、元素鼠标悬浮多了莫名其妙的提示框" class="headerlink" title="3、元素鼠标悬浮多了莫名其妙的提示框"></a>3、元素鼠标悬浮多了莫名其妙的提示框</h4><p>使用<code>v-bind=&quot;$attrs&quot;</code>在不知情的情况下绑定了title到元素</p><h4 id="4、beforeRouteEnter的使用"><a href="#4、beforeRouteEnter的使用" class="headerlink" title="4、beforeRouteEnter的使用"></a>4、beforeRouteEnter的使用</h4><p>注意在次钩子函数中this不能使用，可以通过<code>next((vm)=&gt;&#123;&#125;)</code>获得当前的vue实例</p><h4 id="5、-slots-listener-attrs-props"><a href="#5、-slots-listener-attrs-props" class="headerlink" title="5、$slots,$listener,$attrs,$props"></a>5、<code>$slots</code>,<code>$listener</code>,<code>$attrs</code>,<code>$props</code></h4><h4 id="6、jquery计算隐藏元素的宽高会出错"><a href="#6、jquery计算隐藏元素的宽高会出错" class="headerlink" title="6、jquery计算隐藏元素的宽高会出错"></a>6、jquery计算隐藏元素的宽高会出错</h4><h4 id="7、activated钩子函数会在mounted之后执行"><a href="#7、activated钩子函数会在mounted之后执行" class="headerlink" title="7、activated钩子函数会在mounted之后执行"></a>7、<code>activated</code>钩子函数会在mounted之后执行</h4><h4 id="8、beforeDestroy中清除定时器"><a href="#8、beforeDestroy中清除定时器" class="headerlink" title="8、beforeDestroy中清除定时器"></a>8、<code>beforeDestroy</code>中清除定时器</h4><h4 id="9、原生DOM操作要放在nextTick中执行"><a href="#9、原生DOM操作要放在nextTick中执行" class="headerlink" title="9、原生DOM操作要放在nextTick中执行"></a>9、<code>原生DOM操作</code>要放在<code>nextTick</code>中执行</h4><h4 id="10、echarts的数据集不能使用，发现是datasetComponent没有按需引用"><a href="#10、echarts的数据集不能使用，发现是datasetComponent没有按需引用" class="headerlink" title="10、echarts的数据集不能使用，发现是datasetComponent没有按需引用"></a>10、<code>echarts</code>的<code>数据集</code>不能使用，发现是<code>datasetComponent</code>没有按需引用</h4><h4 id="11、通过this-refs-39-comp-39-修改的子组件data数据似乎不能被watch监视"><a href="#11、通过this-refs-39-comp-39-修改的子组件data数据似乎不能被watch监视" class="headerlink" title="11、通过this.$refs[&#39;comp&#39;]修改的子组件data数据似乎不能被watch监视"></a>11、通过<code>this.$refs[&#39;comp&#39;]</code>修改的子组件data数据似乎不能被watch监视</h4><h4 id="12、el-table的fixed列加上宽度，不然视图有时候异常"><a href="#12、el-table的fixed列加上宽度，不然视图有时候异常" class="headerlink" title="12、el-table的fixed列加上宽度，不然视图有时候异常"></a>12、<code>el-table</code>的<code>fixed列</code>加上宽度，不然视图有时候异常</h4><h4 id="13、IE10-echarts-的颜色如果有alpha通道就渲染为黑色了，鼠标移上去才变正常"><a href="#13、IE10-echarts-的颜色如果有alpha通道就渲染为黑色了，鼠标移上去才变正常" class="headerlink" title="13、IE10 echarts 的颜色如果有alpha通道就渲染为黑色了，鼠标移上去才变正常"></a>13、IE10 echarts 的颜色如果有alpha通道就渲染为黑色了，鼠标移上去才变正常</h4><h4 id="14、echarts-IE10-下载报异常"><a href="#14、echarts-IE10-下载报异常" class="headerlink" title="14、echarts IE10 下载报异常"></a>14、echarts IE10 下载报异常</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异常文件</span></span><br><span class="line"><span class="comment">// .\node_modules\echarts\lib\component\toolbox\feature\SaveAsImage.js</span></span><br><span class="line"><span class="comment">// 异常位置</span></span><br><span class="line"><span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr])</span><br><span class="line"><span class="comment">// 解决</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr]);</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr.<span class="property">buffer</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15、请求时时间传参错误"><a href="#15、请求时时间传参错误" class="headerlink" title="15、请求时时间传参错误"></a>15、请求时时间传参错误</h4><p>  当用<code>new Date()</code>或者 <code>el-date-picker</code>未格式化时间得到的本地时间<code>Fri Nov 19 2021 17:07:41 GMT+0800 (GMT+08:00)</code>直接当作参数通过axios发送时，时间会被置为格林威治时间。所以，所有的时间都要格式化为字符串，或者时间戳</p><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><h4 id="1、echarts如何修改默认颜色"><a href="#1、echarts如何修改默认颜色" class="headerlink" title="1、echarts如何修改默认颜色"></a>1、echarts如何修改默认颜色</h4><blockquote><p>1、 \node_modules\echarts\lib\model\globalDefault.js 修改其中的color<br>  2、主题定制</p></blockquote><h4 id="2、echarts自定义toolbox并保存图片"><a href="#2、echarts自定义toolbox并保存图片" class="headerlink" title="2、echarts自定义toolbox并保存图片"></a>2、echarts自定义toolbox并保存图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 必须以 my 开头</span></span><br><span class="line"><span class="keyword">let</span> mySaveAsImage = &#123;</span><br><span class="line">  <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;下载图片&#x27;</span>,</span><br><span class="line">  <span class="attr">icon</span>: <span class="string">&#x27;image:///images/download.png&#x27;</span>,</span><br><span class="line">  <span class="attr">onclick</span>: <span class="function">(<span class="params">params,api</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> type = <span class="string">&#x27;png&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> imgUrl = api.<span class="title function_">getConnectedDataURL</span>(&#123;</span><br><span class="line">      type,</span><br><span class="line">      <span class="attr">pixelRatio</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">backgroundColor</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">      <span class="attr">excludeComponents</span>: [<span class="string">&#x27;toolbox&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> name = (params.<span class="property">option</span>.<span class="property">title</span> &amp;&amp; params.<span class="property">option</span>.<span class="property">title</span>[<span class="number">0</span>].<span class="property">text</span>) || <span class="string">&#x27;echart下载&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">msSaveOrOpenBlob</span>) &#123;</span><br><span class="line">      <span class="comment">// 截取base64的数据内容（去掉前面的描述信息，类似这样的一段：data:image/png;base64,）并解码为2进制数据</span></span><br><span class="line">      <span class="keyword">let</span> bstr = <span class="title function_">atob</span>(imgUrl.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line">      <span class="comment">// 获取解码后的二进制数据的长度，用于后面创建二进制数据容器</span></span><br><span class="line">      <span class="keyword">let</span> n = bstr.<span class="property">length</span></span><br><span class="line">      <span class="comment">// 创建一个Uint8Array类型的数组以存放二进制数据</span></span><br><span class="line">      <span class="keyword">let</span> u8arr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(n)</span><br><span class="line">      <span class="comment">// 将二进制数据存入Uint8Array类型的数组中</span></span><br><span class="line">      <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        u8arr[n] = bstr.<span class="title function_">charCodeAt</span>(n)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">let</span> blob</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr])</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([u8arr.<span class="property">buffer</span>])</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 调用浏览器的方法，调起IE的下载流程</span></span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="title function_">msSaveOrOpenBlob</span>(blob, name + <span class="string">&#x27;.&#x27;</span> + type)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//类似chrome浏览器创建一个a标签并使用a标签的href属性下载</span></span><br><span class="line">      <span class="keyword">let</span> tempA = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">      tempA.<span class="property">download</span> = name + <span class="string">&#x27;.&#x27;</span> + type</span><br><span class="line">      tempA.<span class="property">href</span> = imgUrl</span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(tempA)</span><br><span class="line">      tempA.<span class="title function_">click</span>()</span><br><span class="line">      tempA.<span class="title function_">remove</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">option.<span class="property">toolbox</span> = &#123;</span><br><span class="line">  <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">feature</span>: &#123;</span><br><span class="line">    mySaveAsImage</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-使用单个el-tooltip根据文字是否溢出-动态显示"><a href="#3-使用单个el-tooltip根据文字是否溢出-动态显示" class="headerlink" title="3. 使用单个el-tooltip根据文字是否溢出,动态显示"></a>3. 使用单个el-tooltip根据文字是否溢出,动态显示</h4><ul><li>template<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-for</span>=<span class="string">&quot;(item,key) in 10&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">mouseenter.native</span>=<span class="string">&quot;handleMouseEnter&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">mouseleave.native</span>=<span class="string">&quot;handleCellMouseLeave&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tooltip</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">&quot;tooltip&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:content</span>=<span class="string">&quot;tooltipContent&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">placement</span>=<span class="string">&quot;top&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">effect</span>=<span class="string">&quot;light&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">el-tooltip</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>script<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">activateTooltip = _.<span class="title function_">debounce</span>(<span class="function">(<span class="params">tooltip</span>) =&gt;</span> tooltip.<span class="title function_">handleShowPopper</span>(), <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">handleMouseEnter</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> cell = event.<span class="property">target</span></span><br><span class="line">  <span class="keyword">const</span> cellChild = event.<span class="property">target</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (cell) &#123;</span><br><span class="line">    <span class="comment">// 获得文字部分的宽度</span></span><br><span class="line">    <span class="keyword">const</span> range = <span class="variable language_">document</span>.<span class="title function_">createRange</span>()</span><br><span class="line">    range.<span class="title function_">setStart</span>(cellChild, <span class="number">0</span>)</span><br><span class="line">    range.<span class="title function_">setEnd</span>(cellChild, cellChild.<span class="property">childNodes</span>.<span class="property">length</span>)</span><br><span class="line">    <span class="keyword">const</span> rangeWidth = range.<span class="title function_">getBoundingClientRect</span>().<span class="property">width</span></span><br><span class="line">    <span class="keyword">const</span> padding =</span><br><span class="line">      <span class="built_in">parseInt</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(cellChild).<span class="property">paddingLeft</span> || <span class="number">0</span>) +</span><br><span class="line">      <span class="built_in">parseInt</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(cellChild).<span class="property">paddingRight</span> || <span class="number">0</span>)</span><br><span class="line">      <span class="comment">// 如果溢出</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      (rangeWidth + padding &gt; cell.<span class="property">offsetWidth</span> || cellChild.<span class="property">scrollWidth</span> &gt; cell.<span class="property">offsetWidth</span>) &amp;&amp;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">tooltip</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">const</span> tooltip = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">tooltip</span></span><br><span class="line">      <span class="comment">// 改变el-tooltip的显示内容</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">tooltipContent</span> = cellChild.<span class="property">innerText</span> || cellChild.<span class="property">textContent</span></span><br><span class="line">      <span class="comment">// 改变el-tooltip的关联元素</span></span><br><span class="line">      tooltip.<span class="property">referenceElm</span> = cell</span><br><span class="line">      <span class="comment">// 将之前的销毁重新展示新的</span></span><br><span class="line">      tooltip.<span class="property">$refs</span>.<span class="property">popper</span> &amp;&amp; (tooltip.<span class="property">$refs</span>.<span class="property">popper</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">      tooltip.<span class="title function_">doDestroy</span>()</span><br><span class="line">      tooltip.<span class="title function_">setExpectedState</span>(<span class="literal">true</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">activateTooltip</span>(tooltip)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 鼠标移出</span></span><br><span class="line"><span class="title function_">handleCellMouseLeave</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> tooltip = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">tooltip</span></span><br><span class="line">  <span class="keyword">if</span> (tooltip) &#123;</span><br><span class="line">    tooltip.<span class="title function_">setExpectedState</span>(<span class="literal">false</span>)</span><br><span class="line">    tooltip.<span class="title function_">handleClosePopper</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工作总结 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vmware网络</title>
      <link href="/2021/08/13/vmware%E7%BD%91%E7%BB%9C/"/>
      <url>/2021/08/13/vmware%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-如何设置VMware-使虚拟机与主机位于同一网段"><a href="#1-如何设置VMware-使虚拟机与主机位于同一网段" class="headerlink" title="1. 如何设置VMware 使虚拟机与主机位于同一网段"></a>1. 如何设置VMware 使虚拟机与主机位于同一网段</h2><h3 id="Step1-虚拟网络编辑器"><a href="#Step1-虚拟网络编辑器" class="headerlink" title="Step1 虚拟网络编辑器"></a>Step1 虚拟网络编辑器</h3><p>菜单-&gt;编辑-&gt;虚拟网络编辑器<br><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210813222303.png" alt="image"><br>点击红色方框进行下一步</p><h3 id="Step2-桥接到真实网卡"><a href="#Step2-桥接到真实网卡" class="headerlink" title="Step2 桥接到真实网卡"></a>Step2 桥接到真实网卡</h3><p><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210813222701.png" alt="image"><br>选中第一个红框中的VMnet0<br>在第二个红框中选择桥接模式，桥接到自己电脑的真实网卡</p><h3 id="Step3-在虚拟机设置中选择该网络"><a href="#Step3-在虚拟机设置中选择该网络" class="headerlink" title="Step3 在虚拟机设置中选择该网络"></a>Step3 在虚拟机设置中选择该网络</h3><p><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210813222943.png" alt="image"></p><h2 id="2-NAT-配置-并设置静态IP"><a href="#2-NAT-配置-并设置静态IP" class="headerlink" title="2. NAT 配置 并设置静态IP"></a>2. NAT 配置 并设置静态IP</h2><p>宿主机网络状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IPv4 地址 . . . . . . . . . . . . : 192.168.0.100</span><br><span class="line">子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">默认网关. . . . . . . . . . . . . : 192.168.0.1</span><br></pre></td></tr></table></figure><h3 id="2-1-VMnet8设置"><a href="#2-1-VMnet8设置" class="headerlink" title="2.1 VMnet8设置"></a>2.1 VMnet8设置</h3><p>VMware虚拟网络编辑器<br>点击更改设置获得管理员权限</p><p>修改下方的子网IP和子网掩码。前两部分必须和主机IP的前两部分一样，即192.168，第三部分得不一样，不能是0，我在这里填2，第四部分补0。子网掩码都是255.255.255.0，填写完毕后，点击 NAT设置：</p><p>填入网关IP，前三部分，即网段必须是192.168.2，和前面保持一致，第四部分随意，这里填2，网关IP整体就是<code>192.168.2.2</code>，点击确定后返回，再点击 DHCP设置：</p><p>注意起始和结束的IP网段也必须是192.168.2，这个范围不要包括网关IP：192.168.2.2，虚拟DHCP服务器设置完成，之后一路确定，NAT网络设置结束。（如果NAT模式下，有很多台虚拟机，就把这个范围扩大）</p><h3 id="2-3-虚拟机的静态IP"><a href="#2-3-虚拟机的静态IP" class="headerlink" title="2.3 虚拟机的静态IP"></a>2.3 虚拟机的静态IP</h3><p>设置静态IP在上述DHCP范围内</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql笔记</title>
      <link href="/2021/06/30/mysql%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/06/30/mysql%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-发展历史"><a href="#1-发展历史" class="headerlink" title="1. 发展历史"></a>1. 发展历史</h1><p>网状数据库 -&gt; 层次性数据库 -&gt; 关系型数据库（RDBMS）-&gt; 非关系型数据库（NOSQL）</p><h1 id="2-关系型数据库的逻辑结构"><a href="#2-关系型数据库的逻辑结构" class="headerlink" title="2. 关系型数据库的逻辑结构"></a>2. 关系型数据库的逻辑结构</h1><p>  SERVER -&gt; DataBase -&gt; Table -&gt;  Row -&gt; Column  </p><p>SQLite,MySQL,PostgreSQL,SQL Server,Oracle,DB2</p><h1 id="3-MySQL"><a href="#3-MySQL" class="headerlink" title="3. MySQL"></a>3. MySQL</h1><h2 id="（1）MySQL部署结构"><a href="#（1）MySQL部署结构" class="headerlink" title="（1）MySQL部署结构"></a>（1）MySQL部署结构</h2><p>服务器端：负责存储，维护数据   </p><p>mysqld.exe  启动mysql</p><p>客户端：负责连接数据库</p><p>mysql.exe    客户端文件</p><p>(数据库范式,设计个人项目数据库)</p><h2 id="（2）常用管理命令"><a href="#（2）常用管理命令" class="headerlink" title="（2）常用管理命令"></a>（2）常用管理命令</h2><p>书写规范：</p><ol><li><p>关键字大写</p></li><li><p>错误行停止</p></li><li><p>可以跨越多行</p></li><li><p>单行注释：# SHOW DATABASES;</p></li><li><p>多行注释：/*SHOW DATABASES;*/</p></li></ol><ul><li>mysql.exe -h127.0.0.1 -P3306 -uroot -p</li></ul><p>-h host 主机 服务器的IP/域名 127.0.0.1 localhost</p><p>-P port  3306</p><p>-u user    root</p><p>-p password 默认为空</p><ul><li>mysql -uroot //登录</li><li>QUIT;</li><li>SHOW DATABASES;</li><li>USE 数据库名; use test;</li><li>SHOW TABLES;</li><li>DESC 表名称;        描述指定数据表下都有哪些列</li><li>show variables like ‘%char%’;</li></ul><h2 id="（3）SQL命令"><a href="#（3）SQL命令" class="headerlink" title="（3）SQL命令"></a>（3）SQL命令</h2><p>结构化查询语言，用于操作关系型数据库，主要是对数据进行增删改查。</p><p>交互模式  </p><p>脚本模式  mysql -uroot&lt;拖拽脚本文件至此</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8;</span><br><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> 数据库名 ;</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名 CHARSET<span class="operator">=</span>UTF8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (     </span><br><span class="line">sid <span class="type">INT</span> ,</span><br><span class="line">  name <span class="type">VARCHAR</span>(<span class="number">64</span>),</span><br><span class="line">  sex <span class="type">VARCHAR</span>(<span class="number">1</span>),</span><br><span class="line">  score <span class="type">INT</span></span><br><span class="line">); <span class="operator">/</span><span class="operator">/</span>创建表student</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student VALUAS(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;ran&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;60&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span>　student;</span><br><span class="line"><span class="keyword">UPDATE</span> student <span class="keyword">SET</span> email<span class="operator">=</span><span class="string">&#x27;lwz@163.com&#x27;</span>,phone<span class="operator">=</span><span class="string">&#x27;13712345678&#x27;</span> <span class="keyword">WHERE</span> uid<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> uid<span class="operator">=</span><span class="string">&#x27;2&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="（4）列类型"><a href="#（4）列类型" class="headerlink" title="（4）列类型"></a>（4）列类型</h2><p>1.数值型（不加引号）</p><ul><li>tinyint 1byte</li></ul><ul><li><p>smallint 2byte</p></li><li><p>int 4byte</p></li><li><p>bigint 8byte</p></li><li><p>float 4byte 浮点 3.4e38</p></li><li><p>double 8byte </p></li><li><p>decimal(M,D) 定点小数，M总有效位，D小数位 99999.99</p></li><li><p>boolean/bool TRUE和FALSE 不能加引号</p></li></ul><p>2.日期时间型（必须加引号）</p><ul><li>date 2021-03-02</li><li>time 14:56:30</li><li>datetime 2021-03-02 14:56:30</li></ul><p>3.字符串型（必须加引号）</p><ul><li>varchar(m) 变长字符串,m-长度 最大值65535</li><li>char(m) 定长字符串 m-最大值255</li><li>text 大型变长字符串 最大值2G</li></ul><h2 id="（5）列约束"><a href="#（5）列约束" class="headerlink" title="（5）列约束"></a>（5）列约束</h2><p>六种约束</p><ul><li>primary key(主键约束);  // 禁止列中出现重复的值。通常加在编号上，自动排序，会增快查找速度</li><li>NOT NULL(非空约束)</li><li>UNIQUE(唯一约束) // 允许插入NULL;</li><li>DEFAULT 值 //两种方法插入<ul><li>INSERT INTO laptop VALUES(4,’惠普暗影精灵6代【2021新品】’,7599.00,’GTX1650Ti’,’PCI-e固态’,’2021-01-01’,DEFAULT,30);</li><li>INSERT INTO laptop(lid,title,price,spec,detail,shelfTime,familyId)      VALUES(2,’联想(LENOVO)拯救者R7000 15.6英寸游戏笔记本电脑’,5899.00,’GTX1650’,’全新锐龙7nm’,’2020-11-01’,10);</li><li>INSERT INTO laptop(lid,title) VALUES(7,’华硕坠机堡垒’);<em>//</em> <em>其他为NULL</em></li></ul></li><li>check()（检查约束）//mysql 不支持检查约束，因为严重影响数据的插入速度</li><li>FOREIGN KEY（外键约束）<ul><li>允许插入NULL，外键列要和对应表的主键列，列类型要保一致</li><li>写法：…,familyId INT , FOREIGN      KEY(familyId) references family(fid)</li></ul></li><li>AUTO_INCREMENT（增列）<ul><li>自增列必须在PRIMARY KEY列</li><li>允许手动赋值</li></ul></li></ul><p>INSERT INTO family VALUES(10,’联想’),(20,’戴尔’),(30,’小米’),(NULL,’惠普’); *//* *一次性插入多条对列约束有影响*</p><h2 id="（6）简单查询"><a href="#（6）简单查询" class="headerlink" title="（6）简单查询"></a>（6）简单查询</h2><ul><li>查询特定列 ： SELECT 列名 FROM 表名</li><li>查询全部列： SELECT * FROM 表名</li><li>起别名：select 列名 as 别名     from 表名</li><li>显示不同的记录：SELECT DISTINCT SEX FROM EMP; <em>//相同记录只显示一次</em></li><li>查询时计算排序： select ename as 姓名,(salary+2000)*12+30000     as 年薪,birthday as 生日 from     emp order by 年薪 desc,生日     asc; <em>//asc(升序) descendant(降序)</em></li><li>条件查询：<ul><li>SELECT * FROM emp WHERE sex=FALSE;</li><li>SELECT * FROM emp WHERE salary&gt;=15000;</li><li>SELECT * FROM emp WHERE deptid IS NULL;</li><li>SELECT * FROM emp WHERE deptid IS NOT NULL;</li><li>SELECT * FROM emp WHERE salary&gt;10000 AND salary&lt;20000;</li><li>SELECT * FROM emp WHERE salary BETWEEN      12000 AND 22000; <em>//等效于SELECT * FROM emp WHERE salary&gt;=12000 AND salary&lt;=22000;</em></li><li>SELECT * FROM emp WHERE salary&lt;15000      OR salary&gt;20000; </li><li>SELECT * FROM emp WHERE birthday &gt;= ‘1996-01-01’ AND birthday      &lt;= ‘1996-12-31’;</li><li>SELECT * FROM emp WHERE deptid IN (2,3) ; <em>//等效于SELECT * FROM emp WHERE deptid=2 or deptid=3;</em></li><li>SELECT * FROM emp WHERE deptid NOT IN (2,3) ; </li></ul></li><li>模糊条件查询：<ul><li>SELECT * FROM emp WHERE ename LIKE ‘%e%’; <em>// %</em> <em>匹配任意0个或多个字符  _ 匹配任意一个字符</em></li></ul></li><li>分页查询<ul><li>SELECT * FROM emp LIMIT0,2;</li><li>select ename as 姓名,birthday as 生日,salary as      工资 from emp where sex=1 order by salary desc      limit 0,3;//查询出男员工中工资最高的的前3个人的姓名，生日，工资</li></ul></li></ul><h2 id="（7）复杂查询"><a href="#（7）复杂查询" class="headerlink" title="（7）复杂查询"></a>（7）复杂查询</h2><p>1)聚合查询/分组查询</p><ul><li>select count(eid) from emp where sex=1; <em>// count sum avg max min</em>  <em>聚合函数</em></li><li>select * from emp where year(birthday)=1993;</li><li>select count(eid) , sex from emp group by sex;</li></ul><p>2)子查询 </p><ul><li>select ename ,salary from emp where salary&gt;(select salary from emp     where ename=’Tom’); <em>// &gt;     ,&gt;=,!=,=,&lt;,&lt;=</em></li><li>select * from dept where not exists (select * from emp where     emp.deptid=dept.did); <em>//     exists, not exists</em></li><li>select * from emp where year(birthday)=(select year(birthday) from     emp where ename=’tom’) and ename!=’tom’;</li></ul><p>3)多表查询，前提是两个表外键和主键建立了关联</p><ul><li>select ename,dname from emp,dept where emp.deptid=dept.did;</li><li>select * from emp inner join dept on emp.deptid=dept.did; <em>//内连接</em></li><li>select * from emp left join dept on emp.deptid=dept.did; <em>//外连接</em></li><li>select ename, dname from emp right join dept on     emp.deptid=dept.did; <em>//外连接</em></li><li>(select ename,dname from emp left join dept on emp.deptid=dept.did)     UNION (select ename,dname from emp right join dept on     emp.deptid=dept.did);<em>//全连接，UNION ,UNION　ＡＬＬ</em></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210630222753.png" alt="image"></p><h1 id="4-cmd改utf8"><a href="#4-cmd改utf8" class="headerlink" title="4. cmd改utf8"></a>4. cmd改utf8</h1><p>默认 chcp 936 //gbk</p><p>chcp 65001 //utf8 每次启动重设</p><p>注册表 “计算机\HKEY_USERS\S-1-5-21-4012883165-3823145716-963249972-1001\Software\Microsoft\Command Processor” 新建字符串autorun=chcp65001</p><h1 id="5-注意"><a href="#5-注意" class="headerlink" title="5. 注意"></a>5. 注意</h1><ol><li>密码加密 md5(‘123’); VARCHAR(32);   // md5(‘’)不足够安全怎么办，（对前端来说）强制用户输入健壮密码 8位以上大写小写数字符号</li><li>在linux 下严格区分大小写  //老师要求：库名，表名，列名全部小写</li></ol><h1 id="6-数据库范式（自学整理）"><a href="#6-数据库范式（自学整理）" class="headerlink" title="6. 数据库范式（自学整理）"></a>6. 数据库范式（自学整理）</h1><p><em>一张数据表的表结构所符合的某种设计标准的级别</em></p><ul><li>1NF：<strong>符合1NF的关系中的每个属性都不可再分，是所有关系型数据库的最基本要求</strong></li><li>2NF：</li><li>3NF</li><li>BCNF</li><li>4NF</li><li>5NF</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些好玩工具的使用</title>
      <link href="/2021/06/25/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/06/25/%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%8E%A9%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-CCproxy-局域网代理"><a href="#1-CCproxy-局域网代理" class="headerlink" title="1. CCproxy 局域网代理"></a>1. <code>CCproxy</code> 局域网代理</h1><h2 id="CCProxy可以完成两项大的功能：代理共享上网和客户端代理权限管理。"><a href="#CCProxy可以完成两项大的功能：代理共享上网和客户端代理权限管理。" class="headerlink" title="CCProxy可以完成两项大的功能：代理共享上网和客户端代理权限管理。"></a><code>CCProxy</code>可以完成两项大的功能：代理共享上网和客户端代理权限管理。</h2><p>只要局域网内有一台机器能够上网，其他机器就可以通过这台机器上安装的<code>CCProxy</code>来共享上网。<a href="http://www.ccproxy.com/download.htm">国内官网</a></p><p>在设置中能看到代理的端口号，其中 <code>808</code> 会在后续用到</p><p><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210625180620.png" alt="image"></p><p><strong>配置二级代理</strong> ，让局域网中的其他电脑也可用到此二级代理，参考自己的工具设置端口</p><p><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210625180431.png" alt="image"></p><p>在需要用到此代理的电脑中的 <code>设置</code> -<code>网络和 Internet</code>- <code>代理</code> 使用代理服务器 <code>地址</code> 处填写``CCproxy<code>主机的 IP（图片示例中是</code>176.4.12.47<code>）</code>端口<code>填</code>808`</p><h1 id="2-GitHub-jsDelivr-建图床"><a href="#2-GitHub-jsDelivr-建图床" class="headerlink" title="2. GitHub + jsDelivr  建图床"></a>2. <code>GitHub</code> + <code>jsDelivr</code>  建图床</h1><p><strong>第一步</strong></p><p>注册或登录<a href="https://github.com/">GitHub</a>。账户名假定为 <code>username</code>。 建立一个开源的仓库，仓库名任取，假定为<code>repo</code>。仓库下建立一个<code>img</code>文件夹，并在此文件夹下 push 一些图片。（<code>Github</code>的使用此次不在介绍）。</p><p><strong>第二步</strong></p><p>使用<a href="https://www.jsdelivr.com/">jsDelivr</a>来请求<code>GitHub</code>上托管的静态资源。<code>url</code> 为 <code>https://cdn.jsdelivr.net/gh/username/repo/img/1.png</code></p><ul><li><code>username</code> GitHub 用户名</li><li><code>repo</code> 仓库名</li><li><code>/img/1.png</code>  图片在仓库中的路径</li></ul><p>到此步骤即实现了 CDN 请求的功能。但用起来很麻烦。下面介绍一个工具。</p><h1 id="3-利用-PicGo-更快捷的使用GitHub-图床"><a href="#3-利用-PicGo-更快捷的使用GitHub-图床" class="headerlink" title="3. 利用 PicGo  更快捷的使用GitHub  图床"></a>3. 利用 <code>PicGo</code>  更快捷的使用<code>GitHub</code>  图床</h1><p><code>PicGo</code> 教程：<a href="https://github.com/Molunerfinn/PicGo">PicGo 仓库</a></p><h1 id="4-宝塔简单图床一键部署"><a href="#4-宝塔简单图床一键部署" class="headerlink" title="4. 宝塔简单图床一键部署"></a>4. 宝塔简单图床一键部署</h1><p>搜索<code>EasyImage 简单图床</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18.04初步搭建nodejs和mariadb</title>
      <link href="/2021/06/12/ubuntu18-04%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BAnodejs%E5%92%8Cmariadb/"/>
      <url>/2021/06/12/ubuntu18-04%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BAnodejs%E5%92%8Cmariadb/</url>
      
        <content type="html"><![CDATA[<p>心血来潮想玩一下linux和服务器， 其他后端语言也不会，只能玩玩nodejs这样子啦</p><p>下面整理了一些安装过程搜集的资料以及遇到的问题。因是linux小白，难免有错，还请指正！</p><h2 id="1-vim的安装"><a href="#1-vim的安装" class="headerlink" title="1. vim的安装"></a>1. vim的安装</h2><p>我的虚拟机建好后，没有vim，须手动安装。在终端中输入 <code>sudo apt install vim</code> ,安装过程中先输入账户密码，后续提示是否继续按 <code>y</code>回车即好</p><h2 id="2-ubuntu18-04-开启root账户登录"><a href="#2-ubuntu18-04-开启root账户登录" class="headerlink" title="2. ubuntu18.04 开启root账户登录"></a>2. ubuntu18.04 开启root账户登录</h2><p>2.1 在已登录当前账户的情况下，先设置root密码</p><p><code>$ sudo passwd root</code></p><p>根据提示输入当前密码、root的密码，确认root 密码即可。 普通用户也可以执行 <code>$ su root</code> 临时的使用root账户。在使用root账户的前提下继续操作</p><p>2.2 <strong>下面修改一些文件配置，实现在开机后可以直接使用root登录</strong></p><p><em>最好在修改前使用 cp命令 备份文件</em>  </p><ol><li><p><code># vim /root/.profile</code></p><p>找到最后一行：<code>mesg n || true</code>，先注释掉，增加<code>tty -s &amp;&amp; mesg n || true</code>这行，如下图所示：<br><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210625214625.png" alt="image"></p></li><li><p><code># cd /etc/pam.d/</code></p><p>需要做修改的有两个文件：gdm-autologin和gdm-password, 注释掉红框中的内容。<br><code>vim gdm-autologin</code><br><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210625214539.png" alt="image"><br><code>vim gdm-password</code><br><img src="https://cdn.jsdelivr.net/gh/lwzcode/pictures/img/20210625214543.png" alt="image"></p><p>关机重启虚拟机，在选择用户时点击 <code>Notlisted</code> 使用root和2.1步骤中设置的密码登录</p></li></ol><blockquote><p>本部分参考文章 <a href="https://ywnz.com/linuxjc/4960.html">让ubuntu系统支持root登录的方法</a></p></blockquote><h2 id="3-安装nodejs"><a href="#3-安装nodejs" class="headerlink" title="3. 安装nodejs"></a>3. 安装nodejs</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz  // 下载 链接可以在nodejs.org官网中右键复制链接地址</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">tar xf  node-v10.9.0-linux-x64.tar.xz       // 解压</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">cd</span> node-v10.9.0-linux-x64/                  // 进入解压目录</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">./bin/node -v                               // 执行node命令 查看版本</span></span><br><span class="line">v10.9.0  // 成功</span><br></pre></td></tr></table></figure><p>添加环境变量</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">vim /etc/profile</span></span><br><span class="line">// 最后一行添加 export PATH=$PATH:/software/nodejs/bin  //$PATH: 后填解压的路径</span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="built_in">source</span> /etc/profile  //遇到问题是 ： 有时候每次开终端都要重新运行 此行命令</span></span><br></pre></td></tr></table></figure><p>npm 可以设置淘宝仓库<code>npm config set registry https://registry.npm.taobao.org</code></p><p>安装 pm2 用来后续管理服务器  <code>npm install pm2@latest -g</code>。pm2的使用查阅<a href="https://pm2.keymetrics.io/docs/usage/quick-start/">官方文档</a></p><h2 id="4-安装MariaDB"><a href="#4-安装MariaDB" class="headerlink" title="4. 安装MariaDB"></a>4. 安装MariaDB</h2><p><code>yum install mariadb mariadb-server</code> 安装<br><code>systemctl start mariadb</code>   #启动mariadb<br><code>systemctl enable mariadb</code>  #设置开机自启动<br><code>mysql_secure_installation</code> #设置root密码等相关</p><p><code>mysql_secure_installation</code> 初始化</p><p>接着会有若干问题 选择 <code>y</code> or  <code>n</code></p><blockquote><p>遇到一个问题：必须使用使用<code>sudo mysql -uroot -p</code>才能连接，而<code>mysql -h127.0.0.1 -P3306 -uroot -p</code>连接不上数据库</p><p>解决：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;&lt;PASSWORD&gt;&#x27;</span>;  #<span class="operator">&lt;</span>PASSWORD<span class="operator">&gt;</span>替换为自己想要的密码</span><br><span class="line">FLUSH <span class="keyword">ALL</span> PRIVILEGES;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart // 重启mariadb</span><br></pre></td></tr></table></figure></blockquote><h2 id="5-安装-Git"><a href="#5-安装-Git" class="headerlink" title="5. 安装 Git"></a>5. 安装 Git</h2><p>参考 git <a href="https://git-scm.com/download/linux">官方</a><br>截至（2022-09-24）centos 7 执行 <code>yum install git </code> 安装的是<code>1.8.3.1</code>版本，若要安装最新的需要执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y remove git <span class="comment">#卸载旧的</span></span><br><span class="line">sudo yum -y remove git-* <span class="comment">#卸载旧的</span></span><br><span class="line">sudo yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm</span><br><span class="line">sudo yum install git</span><br></pre></td></tr></table></figure><p>参考： <a href="https://computingforgeeks.com/install-git-2-on-centos-7/">Install Latest Git ( Git 2.x ) on CentOS 7</a></p><h2 id="6-DNS设置"><a href="#6-DNS设置" class="headerlink" title="6. DNS设置"></a>6. DNS设置</h2><p>   刚装完centos yum安装报<span style="color:red;"> Cannot find a valid baseurl for repo: base/7/x86_64 </span> 错误,需修改DNS</p><h3 id="6-1-显示当前网络连接"><a href="#6-1-显示当前网络连接" class="headerlink" title="6.1 显示当前网络连接"></a>6.1 显示当前网络连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection show</span><br><span class="line">NAME   UUID                                  TYPE      DEVICE</span><br><span class="line">ens33  184cbb4a-a80c-4e56-bdc3-e28666e474cf  ethernet  ens33</span><br></pre></td></tr></table></figure><h3 id="6-2-修改当前网络连接对应的DNS服务"><a href="#6-2-修改当前网络连接对应的DNS服务" class="headerlink" title="6.2 修改当前网络连接对应的DNS服务"></a>6.2 修改当前网络连接对应的DNS服务</h3><p>这里的网络连接可以用名称或者UUID来标识，<code>223.5.5.5</code>(阿里云DNS)，<code>8.8.8.8</code> (谷歌DNS)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli  connection modify <span class="string">&quot;ens33&quot;</span> ipv4.dns <span class="string">&quot;223.5.5.5 8.8.8.8&quot;</span></span><br></pre></td></tr></table></figure><h3 id="6-3-将dns配置生效"><a href="#6-3-将dns配置生效" class="headerlink" title="6.3 将dns配置生效"></a>6.3 将dns配置生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmcli connection up <span class="string">&quot;ens33&quot;</span></span><br></pre></td></tr></table></figure><h3 id="6-4-修改配置文件执行生效"><a href="#6-4-修改配置文件执行生效" class="headerlink" title="6.4 修改配置文件执行生效"></a>6.4 修改配置文件执行生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network  <span class="comment"># 覆盖/etc/resolv.conf</span></span><br><span class="line">nmcli connection reload </span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs笔记</title>
      <link href="/2020/06/30/nodejs%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/06/30/nodejs%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>js:1995 Netscape ,运行在客户端</p><p>nodejs:2009 Ryan dahl , V8引擎，运行在服务器端的开发环境 </p><h1 id="1-Node-js-内置全局对象"><a href="#1-Node-js-内置全局对象" class="headerlink" title="1. Node.js 内置全局对象"></a>1. Node.js 内置全局对象</h1><p>1.1 global 对象</p><ul><li>可以查看一个变量或者方法是否是全局的 global.a (交互模式下 )</li><li>在node.js下，脚本文件不是全局作用域下，防止了全局污染</li><li>JS的全局叫window,在JS下 脚本文件是全局，存在全局污染</li></ul><p>1.2 console对象</p><ul><li><code>console.log()</code>       打印日志</li><li>console.info()      打印消息</li><li>console.warn()     打印警告</li><li>console.error()      打印错误</li><li>console.time(‘label’);console.timeEnd(‘label’);</li></ul><p>1.3 process对象</p><ul><li>porcess.arch 查看CPU架构</li><li>process.platform      查看操作系统</li><li>process.version      查看node.js版本</li><li>process.pid      查看进程pid</li><li>process.kill(pid)     杀掉进程</li></ul><p>1.4 Buffer</p><p>临时在内存中存储数据</p><ul><li><code>Buffer.alloc(5,&#39;abcde&#39;);</code>  // 将数据保存到缓冲区</li><li><code>Buffer.toString()</code>     //读取缓冲区转为字符串</li></ul><h1 id="2-全局函数"><a href="#2-全局函数" class="headerlink" title="2. 全局函数"></a>2. 全局函数</h1><p>2.1 一次性定时器</p><ul><li><code>let     timer=setTimeout(callback,time);</code> 开启定时器</li><li><code>clearTimeout(timer);</code>      清除定时器</li></ul><p>2.2 周期性定时器</p><ul><li><code>let timer=setInterval(callback,time);</code>     开启定时器</li><li><code>clearInterval(timer);</code>      清除定时器</li></ul><h1 id="3-模块"><a href="#3-模块" class="headerlink" title="3. 模块"></a>3. 模块</h1><p>每一个模块都是一个独立的功能体</p><p>每一个脚本文件就是一个模块</p><p>3.1 模块分类</p><ol><li>自定义模块</li><li>核心模块</li><li>第三方模块</li></ol><table><thead><tr><th></th><th>以路径开头</th><th>不以路径开头</th></tr></thead><tbody><tr><td>文件形式</td><td>require(‘./circle.js’)</td><td></td></tr><tr><td>目录形式</td><td>require(‘./02_ran’)  首先寻找02_ran目录下的package.js中”main”属性对应的文件  如果找不到默认为index.js</td><td>require(‘ran’)  默认从下至上寻找node_modules文件夹&gt;ran文件夹  package.json&gt;main属性</td></tr></tbody></table><p>用法：</p><p>引入：let obj=require(‘文件路径’);</p><p>导出：module.exports={ }; </p><p>console.log(__dirname); //获取当前模块的绝对路径<br> console.log(__filename);//绝对路径+模块名称</p><p>3.2 包和npm</p><p>npm: node package manager,用于管理包的工具模块，包括包的下载，升级，卸载，上传</p><ul><li><code>npm init     -y</code> //初始化项目</li><li><code>npm install 包的名称</code>  //安装包</li><li><code>npm     install</code>  //根据package.json配置安装包</li><li><code>npm config     get registry</code> //获取当前仓库路径</li><li><code>npm config     set registry https://registry.npm.taobao.org</code> //设置仓库路径到淘宝镜像</li></ul><p>npx:选择使用不同的nodejs版本运行文件</p><ul><li>npx -p node@版本号 node 文件名</li></ul><p>3.3 querystring模块（查询字符串）</p><ul><li>querystring.parse();</li></ul><p>3.4 URL模块</p><p>统一资源定位</p><p><a href="http://www.codeboy.com:9999/product_details.html?lid=1">http://www.codeboy.com:9999/product_details.html?lid=1</a></p><p>协议    域名/ip        端口   文件路径          查询字符串</p><p>URL模块——用于操作URL的模块</p><ul><li>const url=require(‘url’);</li><li>url.parse(str);</li><li>方式一：<pre><code> 没有斜杠，跳转到和自己同目录下的页面</code></pre></li><li>方式二：<pre><code> 单斜杠加前有一点，跳转到和自己同目录下的layout页面    总结：方式一和方式二效果是相同的。</code></pre></li><li>方式三：<pre><code> 单斜杠，跳转到整个网站根目录下的</code></pre></li><li>方式四： 两点加单斜杠，跳转到上一级目录</li><li>方式五： 多个两点加单斜杠连续用，每一次“../”往上跳转一级,有几个“ ../”，就向上跳几级（ps:我以前错以为只能写一个“../”）</li><li>方式六：全路径方法</li></ul><p>3.5 timer模块</p><ul><li>setImmediate(callback)       //安排在 I/O 事件的回调之后立即执行的 callback。process.nextTick(callback)会比setImmediate(callback)队列更靠前执行</li></ul><p>3.6 fs模块</p><p>文件系统包括目录形式和文件形式。</p><p>同步操作</p><ul><li>fs.mkdirSync(‘./新建文件夹’) //创建目录</li><li>fs.rmdirSync(‘./新建文件夹’) //移除空文件夹</li><li>fs.statSync(‘文件名’); // 查看状态</li><li>fs.writeFileSync(…)</li><li>fs.appendFileSync(…)</li><li>fs.readFileSync(…)</li><li>fs.unlinkSync(…) //删除</li><li>fs.existsSync(…);     //检测文件或目录是否存在</li><li>fs.copyFileSync(path,goalpath);     //拷贝</li></ul><p>异步操作</p><ul><li>fs.mkdir(…)</li><li>fs.rmdir(…)</li><li>fs.stat(path,callback);      // callback(error,success);.<ul><li>success.isFile()      //是文件</li><li>success.isDirectory();       //是目录</li></ul></li><li>fs.writeFile(…);</li><li>fs.appendFile(…)</li><li>fs.readFile(…)</li><li>fs.unlink();</li></ul><p>大文件的复制</p><p><code>fs.createReadStream(&#39;path&#39;).pipe(fs.createWriteStream(&#39;path&#39;));</code></p><ol start="4"><li>同步和异步（day03）</li></ol><p>同步：阻塞后续代码执行，通过返回值获得结果</p><p>异步：在一个独立的线程执行，不会阻塞后续代码执行，通过回调函数获得结果</p><h1 id="5-http协议"><a href="#5-http协议" class="headerlink" title="5. http协议"></a>5. http协议</h1><p>是浏览器和web服务器之间的通信协议</p><p>5.1 general 通用头信息</p><ul><li><p>Request url: 要请求的资源</p></li><li><p>request     method: 请求的方法, post/get/delete/</p></li><li><p>status: 状态码 </p><ul><li>5xx（服务器错误）</li><li>4xx（请求错误）</li><li>3xx （重定向）</li><li>2xx （成功）</li><li>1xx（临时响应）<pre><code>  表示临时响应并需要请求者继续执行操作的状态代码。</code></pre></li></ul></li></ul><p>5.2 request headers</p><p>5.3 response headers</p><ul><li>Location:     <a href="http://www.baidu.com/">http://www.baidu.com/</a>  //重定向地址</li><li>Content-Type:响应的内容类型</li></ul><p>5.4 请求主体</p><p>只有传递数据时才会有</p><h1 id="6-Http模块"><a href="#6-Http模块" class="headerlink" title="6. Http模块"></a>6. Http模块</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app=http.<span class="title function_">createServer</span>(); <span class="comment">//创建服务器 </span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>);<span class="comment">//监听接口  通过事件接受请求 </span></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;   <span class="comment">//req 请求对象    //res 响应对象    </span></span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>,&#123;     &#125;)   </span><br><span class="line">    res.<span class="title function_">write</span>(<span class="string">&#x27;有一个美丽的小女孩&#x27;</span>);  <span class="comment">//设置响应内容   res.end(); //结束并发送请求  </span></span><br><span class="line">&#125;);  </span><br></pre></td></tr></table></figure><h1 id="7-Express-框架-day04"><a href="#7-Express-框架-day04" class="headerlink" title="7. Express 框架(day04)"></a>7. Express 框架(day04)</h1><p>基于node.js平台 快速 开放 极简的WEB开发框架</p><p>下载安装 npm install express</p><p><a href="http://www.expressjs.com.cn/">www.expressjs.com.cn</a></p><h2 id="7-1-路由"><a href="#7-1-路由" class="headerlink" title="7.1 路由"></a>7.1 路由</h2><table><thead><tr><th>const express=require(‘express’);  //express初始化  const app=express();  app.listen(80);</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>//路由  app.get(‘/login’,(req,res)=&gt;{   res.send(‘<h2>这是登陆的网页</h2>‘)  });</td><td>app.get(‘/study’,(req,res)=&gt;{   res.redirect(‘<a href="https://www.baidu.com&/#39;">https://www.baidu.com&#39;</a>);  });</td><td>app.get(‘/‘,(req,res)=&gt;{   res.sendFile(__dirname+’/index.html’);  });</td><td>app.get(‘/index’,(req,res)=&gt;{   res.redirect(‘/‘);  });</td></tr></tbody></table><table><thead><tr><th>传递的方式</th><th>格式</th><th>路由接收的方式</th></tr></thead><tbody><tr><td>查询字符串</td><td><a href="http://127.0.0.1:8080/mysearch?keyword=%E6%89%8B%E6%9C%BA">http://127.0.0.1:8080/mysearch?keyword=手机</a></td><td>req.query格式为对象</td></tr><tr><td>流的方式</td><td>不可见</td><td>通过事件  req.on(‘data’, (chunk)=&gt;{   chunk接收的分段数据，格式为buffer，转字符串为查询字符串，需要使用查询字符串模块解析为对象  })</td></tr><tr><td>路由传参</td><td><a href="http://127.0.0.1:8080/package/ran">http://127.0.0.1:8080/package/ran</a></td><td>app.get(‘/package/:pname’,(req,res)=&gt;{   //pname 形参  req.params 接收数据，格式为对象  })</td></tr></tbody></table><h2 id="7-2-路由器（day05）"><a href="#7-2-路由器（day05）" class="headerlink" title="7.2 路由器（day05）"></a>7.2 路由器（day05）</h2><ul><li><code>?</code>：问号之前的一个字符只能出现零次或一次。例如，路由路径 <code>&#39;/ab?cd&#39;</code> 路径匹配端点 <code>acd</code> 或 <code>abcd</code>。</li><li><code>+</code>：加号之前的一个字符至少出现一次。例如，路径路径 <code>&#39;/ab+cd&#39;</code> 匹配端点 <code>abcd</code>、<code>abbcd</code>、<code>abbbcd</code>，等。</li><li><code>*</code>：星号可以替换为任意字符串。例如，路由路径 <code>&#39;ab\*cd&#39;</code> 匹配端点 <code>abcd</code>、<code>abXcd</code>、<code>abSOMErandomTEXTcd</code>，等。</li><li><code>()</code>：将一个字符串视为一体以执行 <code>?</code>、<code>+</code>、<code>*</code> 操作。例如。 <code>&#39;/ab(cd)?e&#39;</code> 将对 <code>(cd)</code> 进行匹配，将匹配到 <code>abe</code> 和 <code>abcde</code>。</li></ul><table><thead><tr><th>模块</th><th>引用模块</th></tr></thead><tbody><tr><td>module.exports= r;//导出路由器对象</td><td>app.use(‘/user’,userRouter);<br />//将用户的路由器挂载到web服务器下，并添加前缀’/user</td></tr><tr><td>//创建路由器对象  const r=express.Router();  //添加路由 <br />r.get(‘/list’,(req,res)=&gt;{   res.send(‘<h1>这是用户列表</h1>‘)  });</td><td>const userRouter=require(‘./user.js’);</td></tr></tbody></table><h2 id="7-3-中间件"><a href="#7-3-中间件" class="headerlink" title="7.3 中间件"></a>7.3 中间件</h2><p>用于拦截对web服务器中路由的请求，可以做出响应</p><p>分为自定义中间件，路由级中间件，内置中间件，第三方中间件，错误处理中间件</p><ul><li><p>自定义中间件（应用级中间件）</p><pre><code> 本质上就是一个回调函数 app.use(url,callback);  callback(req,res,next);</code></pre></li><li><p>路由级中间件</p></li><li><p>内置中间件</p><pre><code> 静态资源: html、css、js、图片、视频····· 托管静态资源: 浏览器端要请求静态资源，服务器端不需要创建路由，而是让浏览器自动的到指定位置寻找 若同级托管目录下有相同资源，会找到第一个后停止 app.use(express.static(&#39;./public&#39;));</code></pre></li><li><p>第三方中间件</p><p> ​    body-parser</p></li></ul><h2 id="7-4-Express-generator"><a href="#7-4-Express-generator" class="headerlink" title="7.4 Express-generator"></a>7.4 Express-generator</h2><p> 安装  <code>express-generator</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express-generator -g</span><br></pre></td></tr></table></figure><p><a href="https://expressjs.com/zh-cn/starter/generator.html">express-generator</a></p><h1 id="8-正则表达式-day05"><a href="#8-正则表达式-day05" class="headerlink" title="8. 正则表达式(day05)"></a>8. 正则表达式(day05)</h1><p>正则表达式完整视频 <a href="https://pan.baidu.com/s/1IgYS8oGBrRgZQropPUTnoA">https://pan.baidu.com/s/1IgYS8oGBrRgZQropPUTnoA</a> ;提取码：nbx3 </p><p>字符串正则相关函数的用法总结 <a href="https://pan.baidu.com/s/1Rvqr-5UI7NxoxArdgxyRhg">https://pan.baidu.com/s/1Rvqr-5UI7NxoxArdgxyRhg</a> ;提取码：08yj</p><ul><li>[\u4e00-\u9fa5] 中文字符集</li><li>* 可有可无 多了不限</li><li>？可有可无 最多一次</li><li>+ 最少一次 多了不限</li></ul><p>支持正则的字符串方法：</p><ol><li><p><code>let     i=str.search(/正则/i);</code></p><ul><li><p>从头开始查找第一个符合正则的位置</p></li><li><p>返回值：没找到：-1      ，找到了返回第一个字符的下标</p></li></ul></li><li><p><code>let     arr=str.match(/正则/);</code></p><ul><li><p>用正则去匹配str中第一个符合要求的字符串</p></li><li><p>如果找到，则返回关联数组,数组中包含匹配正则的字符串和该字符串的下标 [“0”，”字符串内容”,”index”，索引]；</p></li><li><p>如果找不到返回null</p></li><li><p>拓展知识：js只有一种数组：关联数组</p></li><li><p>默认只找第一个，解决方法 /正则/g ，一但加 g 就不能获得索引位置，只能获得字符串</p></li><li><p>既查找关键词内容，又查找关键词位置，用reg.exec()实现</p></li></ul></li><li><p><code>str.replcae()</code></p><ul><li><p>简单替换</p><pre><code>`str=str.replace(/正则/g，&quot;新值&quot;);`/g 全部替换</code></pre></li><li><p>高级替换</p><pre><code>  str=str.replace(/正则/g,function(keywords)&#123;    return 根据keywords不同，返回不同的值  &#125;);  例： 去除字符串中的前后空格</code></pre><p>   <code>str=&#39;        you can  &#39;.replace(/^\s*|\s*$/g,&quot;&quot;);        //&#39;you can&#39;</code></p><pre><code>  例： 将字符串中的单词首字母大写</code></pre><p>   <code>str=&#39;you can you up&#39;.replace(/\b\w/ig,(k)=&gt;k.toUpperCase());        // &#39;You Can You Up&#39;</code></p></li></ul></li><li><p><code>str=str.splite(/正则/);</code></p><ul><li><p>强调： 不用加g</p></li><li><p>例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str= <span class="string">&#x27;        &lt;li&gt;1&lt;/li&gt;&lt;li&gt;2&lt;/li&gt;&lt;li&gt;3&lt;/li&gt;&lt;li&gt;4&lt;/li&gt;      &lt;li&gt;5&lt;/li&gt; &#x27;</span>;</span><br><span class="line">    str=str.<span class="title function_">replace</span>(<span class="regexp">/^(\s*&lt;li&gt;)|(&lt;\/li&gt;\s*)$/ig</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> arr=str.<span class="title function_">split</span>(<span class="regexp">/&lt;\/li&gt;\s*&lt;li&gt;/</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="9-MySQL-模块-（day06）"><a href="#9-MySQL-模块-（day06）" class="headerlink" title="9.MySQL 模块 （day06）"></a>9.MySQL 模块 （day06）</h1><table><thead><tr><th>mysql</th><th>连接池</th></tr></thead><tbody><tr><td>const connnection=mysql.createConnection({   host:’127.0.0.1’,   port:’3306’,   user:’root’,   password:’liwenzhe’,   database:’tedu’  });  //连接  connnection.connect();</td><td>const pool=mysql.createPool({   host:’127.0.0.1’,   port:3306,   user:’root’,   password:’liwenzhe’,   database:’tedu’,   connectionLimit:20  }); //创建连接池</td></tr><tr><td>connnection.query(‘DELETE FROM emp where ename=”李文哲”‘,  //异步   (err,res)=&gt;{ //插入 //err可能产生的错误  //成功的结果   if(err) throw err;    console.log(res);  });</td><td>pool.query(‘SELECT * FROM emp’,(err,result)=&gt;{   if(err) throw err;   console.log(result);  });</td></tr></tbody></table><p>9.1 防止注入攻击</p><table><thead><tr><th>例：<code>let name=&#39;李文哲&quot; or &quot;1&#39;;  pool.query(&#39;DELETE FROM emp where  name=&quot;&#39;+name+&#39;&quot;&#39;,callback);</code> <br />//注入攻击  // <code>DELETE FROM emp where name=&quot;李文哲&quot; or &quot;1&quot;;</code></th></tr></thead><tbody><tr><td>// ? 代表占位符，第二个参数会被自动过滤,过滤完替换占位符  // pool .query(‘SELECT * FROM emp WHERE ename=?’,[name],callback);</td></tr></tbody></table><p>9.2 使用对象作为参数</p><p><code>let obj=&#123; eid:null, ename:&#39;东子&#39;,sex:1,salary:5000,birthday:&#39;1976-5-29&#39;&#125;;</code>  //缺少的会填充默认值 //属性名必须与sql表的列一致</p><p>//执行sql命令直接插入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pool.<span class="title function_">query</span>(<span class="string">&#x27;INSERT INTO emp SET?&#x27;</span>,[obj],<span class="function">(<span class="params">err,result</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line"></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="10-接口"><a href="#10-接口" class="headerlink" title="10. 接口"></a>10. 接口</h1><p>10.1 数据接口：后端给前端提供的资源</p><p>REST : 一种接口风格，行业内认同的风格</p><p>RESTful : 是基于REST风格的接口</p><ul><li><p>url</p><pre><code> http://127.0.0.1:8080/v1/emps                       版本号  资源名称 http://127.0.0.1:8080/v1/emps/3                                  传递的数据（获取单个资源） </code></pre><p> ​    <a href="http://127.0.0.1:8080/v1/users/login">http://127.0.0.1:8080/v1/users/login</a><br> ​                              对资源的操作</p></li><li><p>请求方法</p><pre><code> 对资源的操作 post 新建资源(插入数据) delete 删除资源 put 修改资源 get 获取资源</code></pre></li><li><p>过滤数据</p><pre><code> http://127.0.0.1:8080/v1/emps？pno=1&amp;count=10</code></pre></li><li><p>返回结果</p><ul><li>状态码</li><li>对象/数组(json)</li></ul></li></ul><p>工具: ApiPost,PostMan</p><p>10.2 错误处理</p><p>错误中间件，写到所有路由之后</p><table><thead><tr><th>① <code>if(err) &#123;next(err);return;&#125;</code></th></tr></thead><tbody><tr><td>② <code>app.use((err,req,res,next)=&gt;&#123; res.sendStatus(500);&#125;);</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端-环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git笔记</title>
      <link href="/2019/09/21/git%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/21/git%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>git config –global core.autocrlf false<br>git config –global user.name “uname”<br>git config –global user.email “uemail”</p>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
